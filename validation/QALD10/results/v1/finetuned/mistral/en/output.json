[
    {
        "question": "After whom is the Riemannian geometry named?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE { wd:Q761383 wdt:P138 ?result. }",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131533 wdt:P138 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131533 wdt:P138 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Which animal participated in a military operation with the Australian Defence Force?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q16521. ?mop wdt:P31 wd:Q645883; wdt:P710 ?result, wd:Q625657.}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q161562 wdt:P710 ?X . ?X wdt:P1452 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q161562 wdt:P710 ?X . ?X wdt:P1452 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "among the characters in the witcher, who has two unmarried partners, Yennefer of Vengerberg and Triss Merigold?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q11835640 wdt:P674 ?result. ?result wdt:P451 ?p1, ?p2. FILTER(?p1 != ?p2 &&(?result IN (wd:Q4205826, wd:Q4463198)))}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q131259 p:P3936 ?s . ?s ps:P3936 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q131259 p:P3936 ?s . ?s ps:P3936 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) } ORDER BY ASC(?x)LIMIT 25...25"
    },
    {
        "question": "among the founders of tencent company, who has been member of national people\u2019s congress?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q860580 wdt:P112 ?result. ?result wdt:P39 wd:Q10891456.}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q169805 wdt:P112 ?answer . ?answer wdt:P463 wd:Q119087}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q169805 wdt:P112 ?answer . ?answer wdt:P463 wd:Q119087} LIMIT 25 ?answer"
    },
    {
        "question": "among the other representative work of the author of hunter x hunter, which one is talking about middle school student?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q696071 wdt:P50 ?author. ?author wdt:P800 ?result. ?result wdt:P921 wd:Q16003532 FILTER(?result != wd:Q69071)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1048909 wdt:P50 ?X . ?X wdt:P1441 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1048909 wdt:P50 ?X . ?X wdt:P1441 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "On which stock exchanges are Siemens AG shares traded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q81230 wdt:P414 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q105780 wdt:P414 ?X . ?X wdt:P389 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q105780 wdt:P414 ?X . ?X wdt:P389 ?answer} LIMIT 25 . FOR ALL ?X WHERE { ?X wdt:P389 ?answer}"
    },
    {
        "question": "Apart from the book series the witcher, name all of the author\u2019s notable work.",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q11835640 wdt:P50 ?author. ?author wdt:P800 ?result. FILTER(?result != wd:Q11835640)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q167321 wdt:P1455 ?X . ?X wdt:P800 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q167321 wdt:P1455 ?X . ?X wdt:P800 ?answer} WHERE { ?X wdt:P800 ?answer} LIMIT 25 ."
    },
    {
        "question": "are brooke raboutou and colin duffy from same state of the usa?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q2926117 wdt:P19 ?b1. wd:Q87192979 wdt:P19 ?b2. ?b1 wdt:P131* ?state. ?b2 wdt:P131* ?state. ?state wdt:P31 wd:Q35657 .}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10598827 wdt:P17 ?X . ?X wdt:P131 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10598827 wdt:P17 ?X . ?X wdt:P131 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "What is the boiling point of water?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q283 wdt:P2102 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q283 wdt:P2103 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q283 wdt:P2103 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "At which school was Yayoi Kusama educated at?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result {wd:Q231121 wdt:P69 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q244092 wdt:P69 ?X . ?X wdt:P1066 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q244092 wdt:P69 ?X . ?X wdt:P1066 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Which High School did Allen Ginsberg attend?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result {wd:Q6711 wdt:P69 ?result. ?result wdt:P31 wd:Q9826}",
        "generated_sparql": "select distinct ?obj where { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 }",
        "raw_answer": "select distinct ?obj where { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 } ORDER BY ASC(?obj)LIMIT 25.252525252525258\n\nSELECT ?obj WHERE { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 } ORDER BY ASC(?obj)LIMIT 25.252525252525258\n\nSELECT ?obj WHERE { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 } ORDER BY ASC(?obj)LIMIT 25.252525252525258\n\nSELECT ?obj WHERE { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 } ORDER BY ASC(?obj)LIMIT 25.252525252525258\n\nSELECT ?obj WHERE { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 } ORDER BY ASC(?obj)LIMIT 25.252525252525258\n\nSELECT ?obj WHERE { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 } ORDER BY ASC(?obj)LIMIT 25.252525252525258\n\nSELECT ?obj WHERE { wd:Q40619 wdt:P69 ?obj . ?obj wdt:P31 wd:Q160254 } ORDER BY ASC(?obj)LIMIT 25.252525252525258\n\n"
    },
    {
        "question": "On which island is the Indonesian capital located?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result {wd:Q252 wdt:P36 ?capital. ?capital wdt:P706 ?result. ?result wdt:P31 wd:Q23442}",
        "generated_sparql": "select distinct ?obj where { wd:Q9257 wdt:P131 ?obj . ?obj wdt:P31 wd:Q515 }",
        "raw_answer": "select distinct ?obj where { wd:Q9257 wdt:P131 ?obj . ?obj wdt:P31 wd:Q515 } ORDER BY ASC(?obj)LIMIT 5 5"
    },
    {
        "question": "can i play don't starve on play station 4?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASk {wd:Q3208174 wdt:P400 wd:Q5014725.}",
        "generated_sparql": "ASK WHERE { wd:Q1652138 wdt:P400 wd:Q1075 }",
        "raw_answer": "ASK WHERE { wd:Q1652138 wdt:P400 wd:Q1075 }"
    },
    {
        "question": "How many General Secretaries of the CPSU were there before Leonid Brezhnev?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT (COUNT(?gensec) as ?result) WHERE{wd:Q765165 p:P39 ?pos. ?pos ps:P39 wd:Q1048744; pq:P580 ?st. ?gensec p:P39 ?pos2. ?pos2 ps:P39 wd:Q1048744; pq:P580 ?st2. FILTER(?st2 < ?st)}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q131545 p:P1038 ?s . ?s ps:P1038 wd:Q131655 . ?s pq:P155 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q131545 p:P1038 ?s . ?s ps:P1038 wd:Q131655 . ?s pq:P155 ?value} ORDER BY DESC(?value)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "How many different presidents of Russia have there been that took the position after 1990?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?president) AS ?result) WHERE{?president p:P39 ?pos. ?pos ps:P39 wd:Q218295. ?pos pq:P580 ?start. FILTER((YEAR(?start)> 1990))}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P39 wd:Q159828 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P39 wd:Q159828 } ASK WHERE { ?sub wdt:P39 wd:Q159828 }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Did adam ondra win a medal in the 2020 summer olympics?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q350568 p:P1344 ?event. ?event ps:P1344 ?eventStatement. ?eventStatement wdt:P361* wd:Q181278. ?event pq:P1352 ?ranking. FILTER(?ranking <= 3)}",
        "generated_sparql": "ASK WHERE { wd:Q1089639 wdt:P1344 wd:Q188500 }",
        "raw_answer": "ASK WHERE { wd:Q1089639 wdt:P1344 wd:Q188500 }"
    },
    {
        "question": "Did the Chicago Bulls win at least two seasons of the NBA championship?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{{SELECT (COUNT (?season) AS ?count) WHERE {?season wdt:P3450 wd:Q155223. ?season wdt:P1346 wd:Q128109}} FILTER(?count >= 2)}",
        "generated_sparql": "ASK WHERE { wd:Q12835 wdt:P2174 wd:Q11419 . wd:Q12835 wdt:P2174 wd:Q11418 }",
        "raw_answer": "ASK WHERE { wd:Q12835 wdt:P2174 wd:Q11419 . wd:Q12835 wdt:P2174 wd:Q11418 }"
    },
    {
        "question": "Did Haruki Murakami receive the Nobel Prize in Literature?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q37922 wdt:P1346 wd:Q134798}",
        "generated_sparql": "ASK WHERE { wd:Q46251 wdt:P166 wd:Q37922 }",
        "raw_answer": "ASK WHERE { wd:Q46251 wdt:P166 wd:Q37922 }\n\nRELEASE"
    },
    {
        "question": "Did Kobe Bryant leave the Lakers when LeBron James joined that team?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q25369 p:P54 ?teamStatement. ?teamStatement ps:P54 wd:Q121783; pq:P582 ?leave. wd:Q36159 p:P54 ?teamStatement2. ?teamStatement2 ps:P54 wd:Q121783; pq:P580 ?join. FILTER(?leave = ?join)}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q11528 p:P54 ?s . ?s ps:P54 wd:Q11375 . ?s pq:P582 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q11528 p:P54 ?s . ?s ps:P54 wd:Q11375 . ?s pq:P582 ?value} ORDER BY DESC(?value)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Did Rawson Marshall Thurber, the director of Red Notice also direct Titanic?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q58815001 wdt:P57 ?director. wd:Q44578 wdt:P57 ?director. FILTER(wd:Q2745616 = ?director)}",
        "generated_sparql": "ASK WHERE { wd:Q114819 wdt:P57 wd:Q105650 . wd:Q148659 wdt:P57 wd:Q105650 }",
        "raw_answer": "ASK WHERE { wd:Q114819 wdt:P57 wd:Q105650 . wd:Q148659 wdt:P57 wd:Q105650 }"
    },
    {
        "question": "Did Venice at any point belong to the Austrian Empire?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q641 p:P17/ps:P17 wd:Q131964}",
        "generated_sparql": "ASK WHERE { wd:Q188 wdt:P131 wd:Q78819 }",
        "raw_answer": "ASK WHERE { wd:Q188 wdt:P131 wd:Q78819 }"
    },
    {
        "question": "Were at least two of the founders of tencent educated at the same university?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q860580 wdt:P112 ?founder. ?founder wdt:P69 ?uni. wd:Q860580 wdt:P112 ?founder2. ?founder2 wdt:P69 ?uni. FILTER(?founder != ?founder2)}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q136212 wdt:P112 ?obj . ?obj wdt:P69 wd:Q465961 }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q136212 wdt:P112 ?obj . ?obj wdt:P69 wd:Q465961 } WHERE { ?obj wdt:P69 wd:Q465961 } GROUP BY ?obj }\n\n## Answer (1)\n\nYou can use this query:\n\n```\nSELECT (COUNT(?obj) AS ?value ) { wd:Q136212 wdt:P112 ?obj }\n```\n\nThis query will return the number of founders of Tencent.\n\nComment: I think the OP meant \"Were at least two of the founders of tencent educated at the same university?\"\n\nComment: @JosephM.Wright: I think you are right. I have edited my answer."
    },
    {
        "question": "Do all of batman\u2019s partner speak english as native language?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{{SELECT (COUNT(DISTINCT ?partner) AS ?pnum) WHERE {wd:Q2695156 wdt:P451 ?partner. ?partner wdt:P103 ?lang. MINUS{?lang wdt:P279* wd:Q1860}}} FILTER(?pnum = 0)}",
        "generated_sparql": "ASK WHERE { wd:Q190845 wdt:P1410 wd:Q1860 }",
        "raw_answer": "ASK WHERE { wd:Q190845 wdt:P1410 wd:Q1860 }"
    },
    {
        "question": "How many spouses do head of states have on average?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (AVG(?spouseCount) AS ?result) WHERE {{SELECT (COUNT(DISTINCT ?spouse) AS ?spouseCount) WHERE{?country wdt:P31 wd:Q6256. ?country p:P35/ps:P35 ?hos. OPTIONAL {?hos wdt:P26 ?spouse}} GROUP BY ?hos }}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1906 wd:Q10232 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1906 wd:Q10232 } FROM THE VOCABULARY { wd:Q10232 wdt:P31 wd:Q132158 } LIMIT 25000"
    },
    {
        "question": "Was there at least one Formula 1 event on the AVUS?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q155810 wdt:P793 ?event. ?event wdt:P31 wd:Q108886259}",
        "generated_sparql": "ASK WHERE { wd:Q18578 wdt:P1344 wd:Q11444 }",
        "raw_answer": "ASK WHERE { wd:Q18578 wdt:P1344 wd:Q11444 }"
    },
    {
        "question": "Find all Turkish verbs ending with \u201cu\u015f\u201d with their lemma.",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {?result wikibase:lexicalCategory wd:Q24905; dct:language/wdt:P218 'tr'; wikibase:lemma ?lemma. FILTER(regex(?lemma, \"u\u015f$\"))}",
        "generated_sparql": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q185318 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'u\u015f')) . FILTER (lang(?sbj_label) = 'en') }",
        "raw_answer": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q185318 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'u\u015f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25000"
    },
    {
        "question": "From which country are the beagles originally from?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q21102 wdt:P495 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11452 wdt:P495 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11452 wdt:P495 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "From which country came the 2nd most winners of the Emmy Award ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {?person wdt:P166 wd:Q123737; wdt:P27 ?result} GROUP BY ?result ORDER BY DESC(COUNT (?result)) OFFSET 1 LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q1140578 . ?ent wdt:P1346 ?obj . ?ent wdt:P17 wd:Q30 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q1140578 . ?ent wdt:P1346 ?obj . ?ent wdt:P17 wd:Q30 } ORDER BY DESC(?obj)LIMIT 50 50 { ?ent wdt:P31 wd:Q1140578 . ?ent wdt:P1346 ?obj . ?ent wdt:P17 wd:Q30 }"
    },
    {
        "question": "Does the music style of Helloween belong to rock music?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q158895 wdt:P136/wdt:P279* wd:Q11399}",
        "generated_sparql": "ASK WHERE { wd:Q127325 wdt:P136 wd:Q133592 }",
        "raw_answer": "ASK WHERE { wd:Q127325 wdt:P136 wd:Q133592 }"
    },
    {
        "question": "Does the postal code 32423 belong to Minden?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q3846 wdt:P281 \"32423\"}",
        "generated_sparql": "ASK WHERE { wd:Q1287 wdt:P281 ?obj filter(?obj = 32423) }",
        "raw_answer": "ASK WHERE { wd:Q1287 wdt:P281 ?obj filter(?obj = 32423) }"
    },
    {
        "question": "has adam ondra been a winner of IFSC climbing world cup?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q350568 p:P1344 ?ps. ?ps ps:P1344/wdt:P3450* wd:Q1774251. {?ps pq:P1352 ?rank.} UNION {?ps pq:P166 ?gold.} FILTER(?rank = 1 || sameTerm(?gold,wd:Q406039))}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q230088 p:P1344 ?s . ?s ps:P1344 wd:Q1089651 . ?s pq:P166 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q230088 p:P1344 ?s . ?s ps:P1344 wd:Q1089651 . ?s pq:P166 ?value} LIMIT 25 ?value"
    },
    {
        "question": "has life expectancy in iran grown in any year after 1999?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q794 p:P2250 ?ols. ?ols pq:P585 ?otime. ?ols ps:P2250 ?ol.  wd:Q794 p:P2250 ?nls. ?nls pq:P585 ?ntime. ?nls ps:P2250 ?nl. FILTER((YEAR(?otime)=1999) && (YEAR(?ntime) > YEAR(?otime)) && (?nl > ?ol))}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q211 p:P2253 ?s . ?s ps:P2253 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1999')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q211 p:P2253 ?s . ?s ps:P2253 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1999')) } ORDER BY ASC(?x)LIMIT 25 ?s"
    },
    {
        "question": "has population of Isfahan increased at any point after 2006?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q42053 p:P1082 ?ops. ?ops pq:P585 ?otime. ?ops ps:P1082 ?op.  wd:Q42053 p:P1082 ?nps. ?nps pq:P585 ?ntime. ?nps ps:P1082 ?np. FILTER((YEAR(?otime)=2006) && (YEAR(?ntime) > YEAR(?otime)) && (?np > ?op))}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q16973 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2006')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q16973 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2006')) } ORDER BY ASC(?x)LIMIT 25 .FOR ALL S Solutions: 1 { ?s pq:P585 ?x }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Did Joe Cocker play at the Woodstock festival?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q164815 wdt:P710 wd:Q190076}",
        "generated_sparql": "ASK WHERE { wd:Q151025 wdt:P175 wd:Q108185 }",
        "raw_answer": "ASK WHERE { wd:Q151025 wdt:P175 wd:Q108185 }"
    },
    {
        "question": "Did Udo B\u00f6lts participate in the Tour de France?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q66432 wdt:P1344/wdt:P31 wd:Q33881}",
        "generated_sparql": "ASK WHERE { wd:Q70992 wdt:P1344 wd:Q8499 }",
        "raw_answer": "ASK WHERE { wd:Q70992 wdt:P1344 wd:Q8499 }"
    },
    {
        "question": "How many of Reinhold Messner's brothers still live?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?brother) AS ?result) WHERE {wd:Q189307 wdt:P3373 ?brother. ?brother wdt:P21 wd:Q6581097. FILTER(NOT EXISTS{?brother wdt:P570 ?dod})}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3373 wd:Q128768 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3373 wd:Q128768 } ASK WHERE { ?sub wdt:P3373 wd:Q128768 }"
    },
    {
        "question": "In which manner did Hemingway die?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q23434 wdt:P1196 ?result.}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q392 wdt:P509 ?X . ?X wdt:P4793 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q392 wdt:P509 ?X . ?X wdt:P4793 ?answer} LIMIT 25 ?X\n\n## Answer (1)\n\nYou can use this query:\n\n```\nSELECT ?answer WHERE { wd:Q392 wdt:P509 ?X . ?X wdt:P4793 ?answer} LIMIT 25 ?X\n```\n\nThis query will return the answer to the question \"In which manner did Hemingway die?\" from the knowledge graph Wikidata."
    },
    {
        "question": "In which industry does the House of Medici own a business?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q170022 wdt:P1830/wdt:P452 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q161882 wdt:P108 ?X . ?X wdt:P452 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q161882 wdt:P108 ?X . ?X wdt:P452 ?answer}"
    },
    {
        "question": "How do people from Turkey call the official name of the united states of america?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q30 wdt:P1448 ?result FILTER(langMatches(lang(?result),\"tr\"))}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q30 p:P155 ?s . ?s ps:P155 ?obj . ?s pq:P4640 wd:Q179207 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q30 p:P155 ?s . ?s ps:P155 ?obj . ?s pq:P4640 wd:Q179207 } ORDER BY ASC(?obj)LIMIT 25 ?s { ?s ps:P155 wd:Q179207 } ORDER BY ASC(?obj)LIMIT 25"
    },
    {
        "question": "How high is the Cologne Cathedral ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q4176 wdt:P2048 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1059 wdt:P2046 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1059 wdt:P2046 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "How is the Harz called in Mandarin Chinese?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q4186 rdfs:label ?result FILTER(langMatches(lang(?result),\"zh-cn\")) }",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q1136 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q50260 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q1136 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q50260 } ORDER BY ASC(?s)LIMIT 25 ."
    },
    {
        "question": "How many international airports are located within the city of Hamburg ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?ap) AS ?result) WHERE {?ap wdt:P31 wd:Q644371. ?ap wdt:P131* wd:Q1055}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P112 wd:Q108 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P112 wd:Q108 } ?value"
    },
    {
        "question": "On how many albums does Madonna perform?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?album) AS ?result) WHERE {?album wdt:P31 wd:Q482994. ?album wdt:P175 wd:Q1744. }",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q1744 wdt:P179 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q1744 wdt:P179 ?obj } ?X DEFINITION ?value.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "On how many albums does Mariah Carey perform?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?album) AS ?result) WHERE {?album wdt:P31 wd:Q482994. ?album wdt:P175 wd:Q41076. }",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q41078 wdt:P175 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q41078 wdt:P175 ?obj } ASK WHERE { ?obj wdt:P31 wd:Q134556 } LIMIT 25.2."
    },
    {
        "question": "How many studio albums has Lana Del Rey have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?album) AS ?result) WHERE {?album wdt:P7937 wd:Q208569. ?album wdt:P175 wd:Q37150. }",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q483730 wdt:P1433 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q483730 wdt:P1433 ?obj } ASK WHERE { wd:Q483730 wdt:P1433 ?obj }"
    },
    {
        "question": "How many ancient civilizations are there?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?civ) AS ?result) WHERE {?civ wdt:P31 wd:Q28171280}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P17 wd:Q1584 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P17 wd:Q1584 } ASK WHERE { ?sub wdt:P17 wd:Q1584 }"
    },
    {
        "question": "In how many years did Kobe Bryant receive an NBA All-Defensive Team award?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?time) AS ?result) WHERE {wd:Q25369 p:P166 ?as. ?as ps:P166 wd:Q1465181; pq:P585 ?time.}",
        "generated_sparql": "SELECT ?value1 ?value2 WHERE { wd:Q41422 p:P166 ?s . ?s ps:P166 wd:Q1800998 . ?s pq:P585 ?value1 . ?s pq:P1346 ?value2 }",
        "raw_answer": "SELECT ?value1 ?value2 WHERE { wd:Q41422 p:P166 ?s . ?s ps:P166 wd:Q1800998 . ?s pq:P585 ?value1 . ?s pq:P1346 ?value2 } LIMIT 25 ?value2 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "How many All-NBA Team awards have Shaquille O'Neal and Kobe Bryant received in the same year?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?time) AS ?result) WHERE {wd:Q25369 p:P166 ?as. ?as ps:P166 wd:Q674359; pq:P585 ?time. wd:Q169452 p:P166 ?as2. ?as2 ps:P166 wd:Q674359; pq:P585 ?time}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q10522 p:P166 ?s . ?s ps:P166 wd:Q188408 . ?s pq:P585 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q10522 p:P166 ?s . ?s ps:P166 wd:Q188408 . ?s pq:P585 ?value} ORDER BY DESC(?value)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "How many literary works did Richard Bachman write?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?book) AS ?result) WHERE {?book wdt:P50 wd:Q39829; wdt:P31 wd:Q7725634}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P800 wd:Q1146572 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P800 wd:Q1146572 } ASK WHERE { ?sub wdt:P800 wd:Q1146572 }"
    },
    {
        "question": "How many notable works does Sarah J. Maas have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?notableW) AS ?result) WHERE {wd:Q20640708 wdt:P800 ?notableW}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q192137 wdt:P800 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q192137 wdt:P800 ?obj } ASK"
    },
    {
        "question": "Did Bryan Evenson work for at least one university where he was educated at?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q4963691 wdt:P108 ?uni; wdt:P69 ?uni. ?uni wdt:P31/wdt:P279* wd:Q3918.}",
        "generated_sparql": "ASK WHERE { wd:Q530350 wdt:P69 ?x0 . ?x0 wdt:P101 wd:Q4614 }",
        "raw_answer": "ASK WHERE { wd:Q530350 wdt:P69 ?x0 . ?x0 wdt:P101 wd:Q4614 }"
    },
    {
        "question": "How many children (including apopted ones) does Jeff Bezos have with his ex-wife?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?child) AS ?result) WHERE {wd:Q312556 p:P26 ?sps. ?sps ps:P26 ?sp. ?child wdt:P25 ?sp; wdt:P22 wd:Q312556. FILTER(EXISTS{?sps pq:P582 ?et})}",
        "generated_sparql": "SELECT ?value1 ?value2 WHERE { wd:Q312554 p:P26 ?s . ?s ps:P26 wd:Q108713091 . ?s pq:P2842 ?value1 . ?s pq:P22 ?value2 }",
        "raw_answer": "SELECT ?value1 ?value2 WHERE { wd:Q312554 p:P26 ?s . ?s ps:P26 wd:Q108713091 . ?s pq:P2842 ?value1 . ?s pq:P22 ?value2 } LIMIT 250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "How many children had Paul McCartney together with his ex-wife Linda McCartney?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?child) AS ?result) WHERE {wd:Q2599 p:P26 ?sps. ?sps ps:P26 ?sp. ?child wdt:P25 ?sp; wdt:P22 wd:Q2599. FILTER((EXISTS{?sps pq:P582 ?et}) && (?sp = wd:Q228899))}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q2599 p:P26 ?s . ?s ps:P26 wd:Q228999 . ?s pq:P406 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q2599 p:P26 ?s . ?s ps:P26 wd:Q228999 . ?s pq:P406 ?value} ORDER BY DESC(?value)LIMIT 5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "How many Chinese zodiac animals are there in total?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?animal) AS ?result) WHERE {?animal wdt:P31 wd:Q79226802}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1889 wd:Q13204 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1889 wd:Q13204 } ASK WHERE { ?sub wdt:P1889 wd:Q13204 }"
    },
    {
        "question": "How many cities are part of the Pearl River Delta?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?city) AS ?result) WHERE {wd:Q1144286 wdt:P527 ?city. ?city wdt:P31/wdt:P279* wd:Q515.}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q108910 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q108910 } ASK WHERE { ?sub wdt:P131 wd:Q108910 }"
    },
    {
        "question": "How many city-states are currently in the world?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?cs) AS ?result) WHERE {?cs wdt:P31 wd:Q133442}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1376 wd:Q11444 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1376 wd:Q11444 } ASK"
    },
    {
        "question": "How many businesses did Steve Jobs found?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?company) AS ?result) WHERE {?company wdt:P112 wd:Q19837; wdt:P31/wdt:P279* wd:Q4830453}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P112 wd:Q19837 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P112 wd:Q19837 } FROM THE VOCABULARY { wd:Q118705 wdt:P31 wd:Q4830453 } WHERE { ?sub wdt:P112 wd:Q19837 } ORDER BY DESC(?value)LIMIT 5"
    },
    {
        "question": "How many countries have a democracy index higher than 7 and drive on the left side ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?country) AS ?result) WHERE {?country wdt:P31 wd:Q6256; wdt:P8328 ?ind; wdt:P1622 wd:Q13196750 FILTER(?ind > 7)}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P150 wd:Q11402 . ?sub wdt:P1336 ?obj }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P150 wd:Q11402 . ?sub wdt:P1336 ?obj } WHERE { ?sub wdt:P150 wd:Q11402 . ?sub wdt:P1336 ?obj . ?sub wdt:P31 wd:Q20 } ORDER BY DESC(?obj)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "How many countries have never been members of the UN?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?country) AS ?result) WHERE {?country wdt:P31 wd:Q6256. FILTER(NOT EXISTS{?country p:P463/ps:P463 wd:Q1065})}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P463 wd:Q1065 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P463 wd:Q1065 } ASK WHERE { ?sub wdt:P463 wd:Q1065 } LIMIT 25000"
    },
    {
        "question": "How many countries are on the continent of South America ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?country) AS ?result) WHERE {?country wdt:P31 wd:Q6256; wdt:P30 wd:Q18}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P30 wd:Q42 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P30 wd:Q42 } ?value FILTER (?value != 0)"
    },
    {
        "question": "How many countries have mountains whose peaks are higher than 2000m above sea level?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?country) AS ?result) WHERE {?mountain wdt:P31/wdt:P279* wd:Q8502; p:P2044/psn:P2044/wikibase:quantityAmount ?height; wdt:P17 ?country. FILTER(?height > 2000)}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P610 wd:Q11405 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P610 wd:Q11405 } ASK WHERE { ?sub wdt:P610 wd:Q11405 }"
    },
    {
        "question": "How many fictional dragons are present in Game of Thrones?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?dragon) AS ?result) WHERE {?dragon wdt:P31/wdt:P279* wd:Q30170627; wdt:P1441 wd:Q23572}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1441 wd:Q2623 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1441 wd:Q2623 } ASK WHERE { ?sub wdt:P1441 wd:Q2623 }"
    },
    {
        "question": "how many emmy awards has the tv series game of thrones won?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?emmy) AS ?result) WHERE {wd:Q23572 wdt:P166 ?emmy. ?emmy wdt:P361/wdt:P279 wd:Q123737}",
        "generated_sparql": "SELECT ?value1 ?value2 WHERE { wd:Q24934 p:P166 ?s . ?s ps:P166 wd:Q106291 . ?s pq:P1346 ?value1 . ?s pq:P1686 ?value2 }",
        "raw_answer": "SELECT ?value1 ?value2 WHERE { wd:Q24934 p:P166 ?s . ?s ps:P166 wd:Q106291 . ?s pq:P1346 ?value1 . ?s pq:P1686 ?value2 } LIMIT 25 OFFSET 0"
    },
    {
        "question": "How many films are derived from the original Ghost in the Shell Manga?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?film) AS ?result) WHERE {wd:Q92582 wdt:P4969 ?film. ?film wdt:P31/wdt:P279* wd:Q11424}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P144 wd:Q1147937 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P144 wd:Q1147937 } ASK WHERE { ?sub wdt:P144 wd:Q1147937 }"
    },
    {
        "question": "How many French kings didn't die of natural causes?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?king) AS ?result) WHERE {?king wdt:P39 wd:Q18384454. MINUS{?king wdt:P1196 wd:Q3739104}}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P453 wd:Q141918 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P453 wd:Q141918 } ASK WHERE { ?sub wdt:P453 wd:Q141918 } ASK WHERE { ?sub wdt:P27 wd:Q142 } ASK WHERE { ?sub wdt:P509 wd:Q141918 }"
    },
    {
        "question": "How many given names has Queen Elizabeth II ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?names) AS ?result) WHERE {wd:Q9682 p:P735/ps:P735 ?names}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q65914 wdt:P735 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q65914 wdt:P735 ?obj } ?value ASK"
    },
    {
        "question": "How many different female mayors did Hamburg have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?fm) AS ?result) WHERE {wd:Q1055 p:P6/ps:P6 ?fm. ?fm wdt:P21 wd:Q6581072}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q1059 wdt:P6 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q1059 wdt:P6 ?obj } ?value ASK WHERE { wd:Q1059 wdt:P6 ?obj . ?obj wdt:P21 wd:Q6581072 } ORDER BY DESC(?value) LIMIT 5"
    },
    {
        "question": "how many head of the state does iran have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?hos) AS ?result) WHERE {wd:Q794 p:P35/ps:P35 ?hos.}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q43409 wdt:P35 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q43409 wdt:P35 ?obj } ?value ASK WHERE { wd:Q43409 wdt:P35 ?obj }"
    },
    {
        "question": "How many scholary articles have ImageNet as a subject?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?art) AS ?result) WHERE {?art wdt:P31 wd:Q13442814. ?art wdt:P921 wd:Q24901201.}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1433 wd:Q14416 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1433 wd:Q14416 } ASK WHERE { ?sub wdt:P1433 wd:Q14416 }"
    },
    {
        "question": "How many inhabitants does the birthplace of Cristiano Ronaldo have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q11571 wdt:P19/wdt:P1082 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10529 wdt:P19 ?X . ?X wdt:P1082 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10529 wdt:P19 ?X . ?X wdt:P1082 ?answer} VOID ?X"
    },
    {
        "question": "How many Japanese writers received the Nobel Prize?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?writer) AS ?result) WHERE {?writer wdt:P166/wdt:P279 wd:Q7191. ?writer wdt:P27 wd:Q17; wdt:P106 wd:Q36180}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P50 wd:Q869 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P50 wd:Q869 } ?value ASK WHERE { ?sub wdt:P50 wd:Q869 } ORDER BY DESC(?value) LIMIT 5"
    },
    {
        "question": "How many languages are widely used in India?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?lan) AS ?result) WHERE {wd:Q668 wdt:P2936 ?lan}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P407 wd:Q92 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P407 wd:Q92 } ?value FILTER (?value != 0)\n\nWHERE { ?sub wdt:P407 wd:Q92 } LIMIT 25 ?value"
    },
    {
        "question": "How many different colors can water take?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?color) AS ?result) WHERE {wd:Q283 wdt:P462 ?color}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q283 wdt:P462 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q283 wdt:P462 ?obj } ?X WHERE { ?X wdt:P462 wd:Q283 } GROUP BY ?X ORDER BY DESC(?value) LIMIT 5"
    },
    {
        "question": "How many locations has Georges Braque worked at (work location)?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?loc) AS ?result) WHERE {wd:Q153793 wdt:P937 ?loc}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q35236 wdt:P937 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q35236 wdt:P937 ?obj } ASK"
    },
    {
        "question": "How many months does winter consist of in Germany?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?mon) AS ?result) WHERE {wd:Q1311 p:P2922 ?ms. ?ms ps:P2922 ?mon; pq:P3005/wdt:P527 ?part. wd:Q183 wdt:P361* ?part.}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q7193 p:P111 ?s . ?s ps:P111 ?x filter(contains(?x,'12')) . ?s pq:P1610 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q7193 p:P111 ?s . ?s ps:P111 ?x filter(contains(?x,'12')) . ?s pq:P1610 ?value} LIMIT 25 ?s"
    },
    {
        "question": "How many movies does the Scream franchise have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?film) AS ?result) WHERE {?film wdt:P31 wd:Q11424; wdt:P179 wd:Q388659}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P179 wd:Q167413 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P179 wd:Q167413 } ASK WHERE { ?sub wdt:P179 wd:Q167413 }"
    },
    {
        "question": "How many movies has James Cameron directed prior to the year 2010?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?film) AS ?result) WHERE {?film wdt:P31 wd:Q11424; wdt:P57 wd:Q42574; wdt:P577 ?date. FILTER(YEAR(?date)<2010)}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q42574 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q42574 } ASK WHERE { ?sub wdt:P57 wd:Q42574 . ?sub wdt:P582 wd:Q473389 } ORDER BY DESC(?value)LIMIT 5"
    },
    {
        "question": "How many movies were directed by Akira Kurosawa ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?film) AS ?result) WHERE {?film wdt:P31 wd:Q11424; wdt:P57 wd:Q8006}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (1)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))\n\n## Answer (0)\n\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P57 wd:Q8006 } ?value FILTER(contains(?value,'.0'))"
    },
    {
        "question": "How many musical scales are there?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?scale) AS ?result) WHERE {?scale wdt:P31 wd:Q179651}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1889 wd:Q11444 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1889 wd:Q11444 } ASK"
    },
    {
        "question": "How many public holidays does the state Bavaria have in a year?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?hol) AS ?result) WHERE {wd:Q980 wdt:P832 ?hol}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q1208 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P31 wd:Q26961084 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q1208 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P31 wd:Q26961084 } ORDER BY ASC(?obj)LIMIT 5"
    },
    {
        "question": "How many literary works besides The Picture of Dorian Gray did its author write?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?novel) AS ?result) WHERE {wd:Q82464 wdt:P50 ?aut. ?novel wdt:P31 wd:Q7725634; wdt:P50 ?aut FILTER(?novel != wd:Q82464)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q142055 wdt:P50 ?X . ?X wdt:P800 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q142055 wdt:P50 ?X . ?X wdt:P800 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "How many literary works did Mark Twain write in his lifetime?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?novel) AS ?result) WHERE {?novel wdt:P31 wd:Q7725634; wdt:P50 wd:Q7245}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P800 wd:Q7132 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P800 wd:Q7132 } ASK WHERE { ?sub wdt:P800 wd:Q7132 }"
    },
    {
        "question": "How many occupations did Mark Twain have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?occ) AS ?result) WHERE {wd:Q7245 wdt:P106 ?occ}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q7031 wdt:P106 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q7031 wdt:P106 ?obj } ?X WHERE { ?X wdt:P106 wd:Q47201 } ORDER BY DESC(?value) LIMIT 5 BASE URI :http://es.wikipedia.org/w/localizedquery.php"
    },
    {
        "question": "how many of spiderman perfomers are citizens of the united kingdom?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?per) AS ?result) WHERE {?per wdt:P27 wd:Q145. wd:Q79037 p:P175/ps:P175 ?per}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q191542 wdt:P175 ?X . ?X wdt:P27 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q191542 wdt:P175 ?X . ?X wdt:P27 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "how many official languages does the united states of america have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?lan) AS ?result) WHERE {wd:Q30 p:P37/ps:P37 ?lan}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q30 wdt:P1037 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q30 wdt:P1037 ?obj } ?X WHERE { ?X wdt:P1037 wd:Q30 } ORDER BY DESC(?value) LIMIT 25 ?X"
    },
    {
        "question": "How many official languages has Pakistan ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?lan) AS ?result) WHERE {wd:Q843 p:P37/ps:P37 ?lan}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q34428 wdt:P1412 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q34428 wdt:P1412 ?obj } ?X WHERE { ?X wdt:P1412 wd:Q34428 } ORDER BY DESC(?value) LIMIT 25 ?X"
    },
    {
        "question": "How many Oscars did all the movies directed by Hayao Miyazaki combined win?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?aw) AS ?result) WHERE {?film wdt:P57 wd:Q55400; wdt:P166 ?aw. ?aw  wdt:P31 wd:Q19020}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q55400 wdt:P57 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q55400 wdt:P57 ?obj } ?value FILTER (?obj not in ( wd:Q1077938 , wd:Q1077939 ))\n\n## Answer (1)\n\nI'm not sure what you mean by \"all the movies directed by Hayao Miyazaki combined\". If you mean the total number of Academy Awards won by all movies directed by Hayao Miyazaki, you can use this query:\n\n```\nSELECT (COUNT(?obj) AS ?value ) { wd:Q55400 wdt:P57 ?obj } ?value\n```\n\nIf you mean the total number of Academy Awards won by all movies directed by Hayao Miyazaki, you can use this query:\n\n```\nSELECT (COUNT(?obj) AS ?value ) { wd:Q55400 wdt:P57 ?obj } ?value\n```\n\nComment: I mean the total number of Academy Awards won by all movies directed by Hayao Miyazaki.\n\nComment: @user1000000 I've updated my answer to reflect that."
    },
    {
        "question": "How many paintings of Pablo Picasso were ever in a museum?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?painting) AS ?result) WHERE {?painting wdt:P31 wd:Q3305213; wdt:P170 wd:Q5593; wdt:P276 ?loc. ?loc wdt:P31/wdt:P279* wd:Q33506}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P180 wd:Q5593 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P180 wd:Q5593 } ?value ASK"
    },
    {
        "question": "How many people can play \"Mensch \u00e4rgere dich nicht\" at most?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q545129 wdt:P1873 ?result}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q159877 wdt:P1087 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q159877 wdt:P1087 ?obj } ASK"
    },
    {
        "question": "How many people did Oscar Pistorius kill?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?people) AS ?result) WHERE {?people wdt:P31 wd:Q5;wdt:P157 wd:Q201377}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P157 wd:Q127111 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P157 wd:Q127111 }\n\nWHERE { ?sub wdt:P157 wd:Q127111 }\n\nORDER BY DESC(?value)\n\nLIMIT 5"
    },
    {
        "question": "How many people died due to the Great Leap Forward according to the highest estimate?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (MAX(?d) AS ?result) WHERE {wd:Q58715 wdt:P1542/wdt:P1120 ?d}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q108335 p:P1398 ?s . ?s ps:P1398 ?obj . ?s pq:P1010 wd:Q152060 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q108335 p:P1398 ?s . ?s ps:P1398 ?obj . ?s pq:P1010 wd:Q152060 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "How many people have won the Nobel Prize in Literature since its inception?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?people) AS ?result) WHERE {?people wdt:P31 wd:Q5; wdt:P166 wd:Q37922}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q49080 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q49080 } COMMON TAGS: ?value DESC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "How many people live in cities in the vicinity of the Nile ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (SUM (?pop) AS ?result) WHERE {?city wdt:P31 wd:Q515; wdt:P206 wd:Q3392; wdt:P1082 ?pop}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P190 wd:Q47 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P190 wd:Q47 } ?value ASK"
    },
    {
        "question": "How many pitch classes are part of the chromatic scale?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?note) AS ?result) WHERE {wd:Q202021 wdt:P527 ?note. ?note wdt:P31 wd:Q1760309}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1880 wd:Q11495 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1880 wd:Q11495 } ASK WHERE { ?sub wdt:P1880 wd:Q11495 }"
    },
    {
        "question": "how many plays has William Shakespeare written in the 16th century.",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?play) AS ?result) WHERE {?play wdt:P31 wd:Q7725634; wdt:P7937 wd:Q25379; wdt:P50 wd:Q692; wdt:P571 ?inc FILTER(YEAR(?inc) < 1600)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q692 wdt:P800 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1600'))}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q692 wdt:P800 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1600'))} ORDER BY ASC(?answer)LIMIT 5"
    },
    {
        "question": "How many poems did Allen Ginsberg published?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?poem) AS ?result) WHERE {?poem wdt:P31 wd:Q7725634; wdt:P50 wd:Q6711; wdt:P136/wdt:P279* wd:Q482}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1433 wd:Q1344 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1433 wd:Q1344 } ASK WHERE { ?sub wdt:P1433 wd:Q1344 }"
    },
    {
        "question": "How many political parties have ever had seats in the German Bundestag ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?group) AS ?result) WHERE {?group wdt:P31/wdt:P279* wd:Q7278. ?group p:P1410 ?ps. ?ps pq:P194 wd:Q154797; ps:P1410 ?seats. FILTER(?seats > 0)}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1416 wd:Q132931 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1416 wd:Q132931 } ASK WHERE { ?sub wdt:P1416 wd:Q132931 }"
    },
    {
        "question": "How many positions did Kobe Bryant play in his team?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?pos) AS ?result) WHERE {wd:Q25369 wdt:P413 ?pos}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11528 wdt:P54 ?X . ?X wdt:P1344 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11528 wdt:P54 ?X . ?X wdt:P1344 ?answer} ORDER BY DESC(?answer)LIMIT 5{ ?answer }"
    },
    {
        "question": "How many prizes are there established by Alfred Nobel ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?prize) AS ?result) WHERE {wd:Q7191 wdt:P527 ?prize; wdt:P112 wd:Q23810}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q2267 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q2267 } ASK WHERE { ?sub wdt:P166 wd:Q2267 }\n\n## Answer (1)\n\nI'm not sure what you mean by \"How many prizes are there established by Alfred Nobel ?\". If you mean how many prizes are awarded by Alfred Nobel, the answer is 6.\n\nIf you mean how many prizes are named after Alfred Nobel, the answer is 1.\n\nComment: I mean how many prizes are named after Alfred Nobel.\n\nComment: @user1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Did SpaceX ever operate a space mission that was a failed launch?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {?mission wdt:P31 wd:Q2133344, wd:Q99654400; wdt:P137 wd:Q193701}",
        "generated_sparql": "ASK WHERE { ?x0 wdt:P1552 wd:Q193701 . ?x0 wdt:P2560 wd:Q19853162 }",
        "raw_answer": "ASK WHERE { ?x0 wdt:P1552 wd:Q193701 . ?x0 wdt:P2560 wd:Q19853162 } LIMIT 25 25 ?x0 wdt:P1552 wd:Q193701 . ?x0 wdt:P2560 wd:Q19853162"
    },
    {
        "question": "How many people nominated for the nobel prize in chemistry didn't ever win it?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?peo) AS ?result) WHERE {?peo wdt:P31 wd:Q5; wdt:P1411 wd:Q44585. FILTER(NOT EXISTS{?peo wdt:P166 wd:Q44585})}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1411 wd:Q8744 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1411 wd:Q8744 } ASK WHERE { ?sub wdt:P1411 wd:Q8744 }"
    },
    {
        "question": "How many seasons does Pose have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result {wd:Q30603704 wdt:P2437 ?result}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q10893337 wdt:P2437 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q10893337 wdt:P2437 ?obj } ASK"
    },
    {
        "question": "How many seats are there in the current German Bundestag ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q154797 wdt:P1342 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q1065 p:P121 ?s . ?s ps:P121 ?obj . ?s pq:P2048 ?x filter(contains(?x,'1')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q1065 p:P121 ?s . ?s ps:P121 ?obj . ?s pq:P2048 ?x filter(contains(?x,'1')) } ORDER BY DESC(?x)LIMIT 50 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?x,'1')) } 50 { ?s pq:P2048 ?x FILTER(contains(?"
    },
    {
        "question": "How many siblings had the author of \u201cLittle Women\u201d ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?sib) AS ?result) WHERE {wd:Q523076 wdt:P50 ?aut. ?aut wdt:P3373 ?sib}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q207646 wdt:P1629 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q207646 wdt:P1629 ?obj } ASK"
    },
    {
        "question": "How many ski resorts were there ever in France?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?ski) AS ?result) WHERE {?ski wdt:P31 wd:Q130003; wdt:P17 wd:Q142}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P276 wd:Q142 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P276 wd:Q142 } ?value FILTER (lang(?value) = 'en')"
    },
    {
        "question": "How many songs were composed by Jay Chou but not released in his own albums?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?song) AS ?result) WHERE {?song wdt:P31 wd:Q7366; wdt:P86 wd:Q238819; wdt:P361 ?album. ?album wdt:P31 wd:Q482994; wdt:P175 ?per FILTER(?per != wd:Q238819)}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P86 wd:Q461849 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P86 wd:Q461849 } ASK WHERE { ?sub wdt:P86 wd:Q461849 }"
    },
    {
        "question": "How many works that are based on Spider-Man has Venom been a part of?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?work) AS ?result) WHERE {wd:Q1621261 wdt:P1441 ?work. ?work wdt:P144 wd:Q79037}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P144 wd:Q190218 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P144 wd:Q190218 } ASK WHERE { ?sub wdt:P144 wd:Q190218 }\n\n## Answer (1)\n\nI'm not sure what you mean by \"work that are based on Spider-Man\". If you mean \"works that are based on Spider-Man\", then the answer is 0.\n\nIf you mean \"works that are based on Spider-Man and that Venom is a part of\", then the answer is 0.\n\nIf you mean \"works that are based on Spider-Man and that Venom is a part of and that are also based on Spider-Man\", then the answer is 0.\n\nIf you mean \"works that are based on Spider-Man and that Venom is a part of and that are also based on Spider-Man and that are also based on Spider-Man\", then the answer is 0.\n\nIf you mean \"works that are based on Spider-Man and that Venom is a part of and that are also based on Spider-Man and that are also based on Spider-Man and that are also based on Spider-Man\", then the answer is 0.\n\nIf you mean \"works that are based on Spider-Man and that Venom is a part of and that are also based on Spider-Man and that are also based on Spider-Man and that are also based on Spider-Man and that are also based on Spider-Man\", then the answer is 0.\n\nIf you mean \"works that are based on Spider-Man and that Venom is a part of and that are also based on Spider-Man and that are also based on Spider-Man and that are also based on Spider-Man and that are also based on Spider-Man\", then the answer is 0.\n\nIf you mean \"works that are based on Spider-Man and that Venom is a part of and that are also based on Spider-Man and that are also based on Spider-Man and that are also based on Spider-Man and that are also based on Spider-Man\", then the answer is 0.\n\nIf you mean \"works that"
    },
    {
        "question": "How many spouses had Rama V (one of the former Kings of Siam)?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?sp) AS ?result) WHERE {wd:Q158861 wdt:P26 ?sp}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q10651 wdt:P26 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q10651 wdt:P26 ?obj } ?X DEFINED AS ?X CALC { ?obj wdt:P21 wd:Q6581097 } ASK"
    },
    {
        "question": "Does Switzerland have a place north of the Point (8.57 47.8)?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q39 wdt:P1332 ?loc FILTER(?loc > \"Point(8.57 47.8)\"^^geo:wktLiteral)}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q39 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P1310 wd:Q11444 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q39 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P1310 wd:Q11444 } ORDER BY ASC(?obj)LIMIT 5"
    },
    {
        "question": "how many times has Giorgio Moroder won golden globe award?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?awards) AS ?result) WHERE {wd:Q312674 p:P166 ?awards. ?awards ps:P166/wdt:P31 wd:Q1011547}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q105370 wdt:P166 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q105370 wdt:P166 ?obj } ?X WHERE { ?X wdt:P166 wd:Q105370 } ORDER BY DESC(?value) LIMIT 5"
    },
    {
        "question": "How many Olympic Games has Kobe Bryant taken part in?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?ol) AS ?result) WHERE {wd:Q25369 wdt:P1344 ?ol. ?ol wdt:P31/wdt:P279 wd:Q5389}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q193120 p:P1344 ?s . ?s ps:P1344 wd:Q1065 . ?s pq:P1706 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q193120 p:P1344 ?s . ?s ps:P1344 wd:Q1065 . ?s pq:P1706 ?value} ORDER BY DESC(?value)LIMIT 5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "How many times was Oskar Lafontaine elected Member of the Landtag of Saarland?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?s) AS ?result) WHERE {wd:Q110719 p:P39 ?s. ?s ps:P39 wd:Q18130478}",
        "generated_sparql": "SELECT ?value1 ?value2 WHERE { wd:Q188628 p:P39 ?s . ?s ps:P39 wd:Q28616555 . ?s pq:P2715 ?value1 . ?s pq:P1548 ?value2 }",
        "raw_answer": "SELECT ?value1 ?value2 WHERE { wd:Q188628 p:P39 ?s . ?s ps:P39 wd:Q28616555 . ?s pq:P2715 ?value1 . ?s pq:P1548 ?value2 } LIMIT 25 OFFSET 0"
    },
    {
        "question": "How many wars did the Empire of Japan participate in?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?war) AS ?result) WHERE {wd:Q188712 wdt:P1344 ?war. ?war wdt:P31 wd:Q198}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q188520 wdt:P607 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q188520 wdt:P607 ?obj } ?X WHERE { ?X wdt:P607 wd:Q188520 } ORDER BY DESC(?value) LIMIT 5"
    },
    {
        "question": "How many women were amongst the founding members of \u201cThe Bridge\u201d (\u201cDie Br\u00fccke\u201d)?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?f) AS ?result) WHERE {wd:Q152778 wdt:P112 ?f. ?f wdt:P21 wd:Q6581072}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P112 wd:Q61685 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P112 wd:Q61685 } ?X WHERE { ?X wdt:P21 wd:Q6581072 } ORDER BY DESC(?value)LIMIT 5"
    },
    {
        "question": "Who has a higher observed lifespan out of the common bottlenose dolphin and the brown bear?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P4214 ?ls. FILTER(?result IN (wd:Q174199, wd:Q36341))} ORDER BY DESC(?ls) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P3333 ?obj . ?ent wdt:P171 wd:Q165062 . ?ent wdt:P171 wd:Q165063 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P3333 ?obj . ?ent wdt:P171 wd:Q165062 . ?ent wdt:P171 wd:Q165063 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "What is TNFAIP1 ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q18032040 wdt:P31 ?result}",
        "generated_sparql": "select distinct ?answer where { wd:Q161887 wdt:P1557 ?answer}",
        "raw_answer": "select distinct ?answer where { wd:Q161887 wdt:P1557 ?answer}"
    },
    {
        "question": "How often did Naomi Novik win the nebula award?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(?award) AS ?result) WHERE {wd:Q242643 p:P166/ps:P166 ?award FILTER(?award = wd:Q194285)}",
        "generated_sparql": "SELECT ?value1 ?value2 WHERE { wd:Q230570 p:P166 ?s . ?s ps:P166 wd:Q189568 . ?s pq:P1346 ?value1 . ?s pq:P156 ?value2 }",
        "raw_answer": "SELECT ?value1 ?value2 WHERE { wd:Q230570 p:P166 ?s . ?s ps:P166 wd:Q189568 . ?s pq:P1346 ?value1 . ?s pq:P156 ?value2 } LIMIT 25000"
    },
    {
        "question": "How often did the Mongols try to invade Japan?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?time) AS ?result) WHERE {wd:Q208156 wdt:P585 ?time}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1027 wd:Q17471 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1027 wd:Q17471 } ASK WHERE { ?sub wdt:P1027 wd:Q17471 }"
    },
    {
        "question": "How often was Naomi Novik nominated for a Hugo Award?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(?award) AS ?result) WHERE {wd:Q242643 p:P1411/ps:P1411 ?award FILTER(?award = wd:Q188914)}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q234571 wdt:P1411 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q234571 wdt:P1411 ?obj } ?X WHERE { ?X wdt:P1411 ?obj } ORDER BY DESC(?value)LIMIT 5"
    },
    {
        "question": "How many years did the second oldest dog in the world live?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE{?dog wdt:P31 wd:Q144. ?dog wdt:P569 ?db; wdt:P570 ?dd BIND((YEAR(?dd) - YEAR(?db)) AS ?result)} ORDER BY DESC(?result) LIMIT 1 OFFSET 1",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1081089 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1081089 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "if someone died in 1969, is there any chance they heard of queen\u2019s music?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q15862 wdt:P2031 ?start. FILTER(YEAR(?start) <= 1969)}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q14270 p:P737 ?s . ?s ps:P737 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1969')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q14270 p:P737 ?s . ?s ps:P737 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1969')) } ORDER BY ASC(?x)LIMIT 25 . FOR ALL ?s WHERE { ?s ps:P737 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1969')) }"
    },
    {
        "question": "Is Dr. Pepper named after its inventor?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q623561 wdt:P138 ?na; wdt:P61 ?inv. FILTER(?inv = ?na)}",
        "generated_sparql": "ASK WHERE { wd:Q131832 wdt:P138 wd:Q131832 }",
        "raw_answer": "ASK WHERE { wd:Q131832 wdt:P138 wd:Q131832 }"
    },
    {
        "question": "In how many movies did Carey Mulligan and Ryan Gosling star together?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?movie) AS ?result) WHERE {?movie wdt:P31 wd:Q11424; wdt:P161 wd:Q193815, wd:Q219655}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q108622 wdt:P161 ?X . ?X wdt:P161 wd:Q134048 . ?X wdt:P161 wd:Q134046 }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q108622 wdt:P161 ?X . ?X wdt:P161 wd:Q134048 . ?X wdt:P161 wd:Q134046 } ?answer . ?answer wdt:P31 wd:Q15920289 } ORDER BY DESC(?answer)LIMIT 5{ ?answer }"
    },
    {
        "question": "in the country where ghost in the shell is born, who is the current head of the state?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q92580 wdt:P495 ?country. ?country wdt:P35 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q106894 wdt:P17 ?X . ?X wdt:P35 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q106894 wdt:P17 ?X . ?X wdt:P35 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "How many rivers are in or next to the U.S. state where cage the elephant is from?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?bow) AS ?result) WHERE {wd:Q68061 wdt:P740/wdt:P131* ?state. ?state wdt:P31 wd:Q35657; wdt:P206 ?bow. ?bow wdt:P31 wd:Q4022}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q188900 wdt:P17 ?X . ?X wdt:P206 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q188900 wdt:P17 ?X . ?X wdt:P206 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "In which federal state is the Veltins brewery headquarter?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q608350 wdt:P159 ?hql. ?hql wdt:P131* ?result. ?result wdt:P31 wd:Q1221156}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q189888 wdt:P159 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q189888 wdt:P159 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "In which stadium do the New York Yankees play?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q213417 wdt:P115 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q178859 wdt:P118 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q178859 wdt:P118 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "In which countries is the Himalayas located?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q5451 wdt:P17 ?result}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P30 wd:Q8432 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P30 wd:Q8432 } LIMIT 25 ?value"
    },
    {
        "question": "Was Isfahan a capital in the year 934?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q42053 p:P1376 ?ps. ?ps pq:P580 ?start; pq:P582 ?end. FILTER((YEAR(?start) < 934) && (YEAR(?end) > 934))}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'934')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'934')) } ORDER BY ASC(?x)LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'934')) } ORDER BY ASC(?x)LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'934')) } ORDER BY ASC(?x)LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'934')) } ORDER BY ASC(?x)LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'934')) } ORDER BY ASC(?x)LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'934')) } ORDER BY ASC(?x)LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q18233 p:P1376 ?s . ?s ps:P13"
    },
    {
        "question": "In how many countries has IKEA been established?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?c) AS ?result) WHERE {wd:Q1769361 wdt:P527 ?c. ?c p:P31/ps:P31 wd:Q6256}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q171441 wdt:P17 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q171441 wdt:P17 ?obj } ?X WHERE { ?X wdt:P17 wd:Q171441 } GROUP BY ?X ORDER BY DESC(?value)LIMIT 5"
    },
    {
        "question": "In which country did the United Fruit Company have their headquarters?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE{wd:Q1771942 wdt:P159/wdt:P131* ?result. ?result wdt:P31 wd:Q6256}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q184142 wdt:P159 ?X . ?X wdt:P501 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q184142 wdt:P159 ?X . ?X wdt:P501 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "In how many countries is pysanka practiced?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?c) AS ?result) WHERE {wd:Q3233785 wdt:P17 ?c}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P276 wd:Q182979 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P276 wd:Q182979 } ASK WHERE { ?sub wdt:P276 wd:Q182979 }"
    },
    {
        "question": "In which country is Oberirrach ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q98138090 wdt:P17 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q12988 wdt:P17 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q12988 wdt:P17 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "In which country was Spotify created?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q689141 wdt:P495 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q483701 wdt:P17 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q483701 wdt:P17 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "What is the song Vogue by Madonna named after?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE{wd:Q1128775 wdt:P175 wd:Q1744; wdt:P138 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q182201 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1.0')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q182201 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1.0')) } ORDER BY ASC(?x)LIMIT 25 ?s { FILTER (lang(?x) = 'en') } \n\nID: 15788778-5e6c-11eb-912e-00505e8d0ba9\n\nSELECT ?obj WHERE { wd:Q182201 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1.0')) } ORDER BY ASC(?x)LIMIT 25 ?s { FILTER (lang(?x) = 'en') } \n\nID: 15788778-5e6c-11eb-912e-00505e8d0ba9\n\nSELECT ?obj WHERE { wd:Q182201 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1.0')) } ORDER BY ASC(?x)LIMIT 25 ?s { FILTER (lang(?x) = 'en') } \n\nID: 15788778-5e6c-11eb-912e-00505e8d0ba9\n\nSELECT ?obj WHERE { wd:Q182201 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1.0')) } ORDER BY ASC(?x)LIMIT 25 ?s { FILTER (lang(?x) = 'en') } \n\nID: 15788778-5e6c-11eb-912e-"
    },
    {
        "question": "in which language does the united stated have the shortest short name?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q30 wdt:P1813 ?name BIND(lang(?name) AS ?result)} ORDER BY ASC(strlen(?name)) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q3024240 . ?ent wdt:P1813 ?obj . ?ent wdt:P31 wd:Q3024240}",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q3024240 . ?ent wdt:P1813 ?obj . ?ent wdt:P31 wd:Q3024240} ORDER BY ASC(?obj)LIMIT 5"
    },
    {
        "question": "Does Bremerhaven's local dialing code start with 4?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q2706 wdt:P473 ?code. FILTER regex(?code, \"^4\")}",
        "generated_sparql": "ASK WHERE { wd:Q1186 wdt:P2599 ?obj filter(?obj = '4') }",
        "raw_answer": "ASK WHERE { wd:Q1186 wdt:P2599 ?obj filter(?obj = '4') }\n\nRELEASE"
    },
    {
        "question": "In how many movies was Johnny Depp casted in?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?result) AS ?resultCnt) WHERE{?result wdt:P31 wd:Q11424; wdt:P161 wd:Q37175}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P161 wd:Q37175 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P161 wd:Q37175 } ASK WHERE { ?sub wdt:P161 wd:Q37175 }"
    },
    {
        "question": "In which year did ABBA publish their album The Visitors ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE{wd:Q338553 wdt:P577 ?date. BIND(YEAR(?date) AS ?result)}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q182233 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1981')) . ?s pq:P279 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q182233 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1981')) . ?s pq:P279 ?value} ORDER BY ASC(?value)LIMIT 25 ?x defined [ https://en.wikipedia.org/wiki/Wikidata:Q182233 wdt:P577 ?x ] WHERE { ?x filter(contains(YEAR(?x),'1981')) } ORDER BY ASC(?x)LIMIT 25"
    },
    {
        "question": "In which year was the author of \u201cThe Vanishing Half\u201d born?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q98476957 wdt:P50/wdt:P569 ?date. BIND(YEAR(?date) AS ?result)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q89458774 wdt:P50 ?X . ?X wdt:P569 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q89458774 wdt:P50 ?X . ?X wdt:P569 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Is After Eight manufactured by Unilever?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q388973 wdt:P176 wd:Q157062}",
        "generated_sparql": "ASK WHERE { wd:Q115282 wdt:P176 wd:Q173254 }",
        "raw_answer": "ASK WHERE { wd:Q115282 wdt:P176 wd:Q173254 }"
    },
    {
        "question": "Is ALDI also in Italy?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q125054 wdt:P527/wdt:P17 wd:Q38}",
        "generated_sparql": "ASK WHERE { wd:Q15678 wdt:P17 wd:Q38 }",
        "raw_answer": "ASK WHERE { wd:Q15678 wdt:P17 wd:Q38 }"
    },
    {
        "question": "is Isfahan a big city?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q42053 wdt:P31 wd:Q1549591}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q16133 wdt:P150 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q16133 wdt:P150 ?obj } ?obj WHERE { ?obj wdt:P31 wd:Q154952 } LIMIT 25.2"
    },
    {
        "question": "Is math related to science ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q395 ?p [?p2 wd:Q336]}",
        "generated_sparql": "ASK WHERE { wd:Q11414 wdt:P1269 wd:Q1013 }",
        "raw_answer": "ASK WHERE { wd:Q11414 wdt:P1269 wd:Q1013 }"
    },
    {
        "question": "Is Python a kind of Programming languages?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q28865 p:P31/ps:P31 wd:Q9143}",
        "generated_sparql": "ASK WHERE { wd:Q4914 wdt:P282 wd:Q1427 }",
        "raw_answer": "ASK WHERE { wd:Q4914 wdt:P282 wd:Q1427 }"
    },
    {
        "question": "Is samurai champloo a piece of original work or an adaptation?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {wd:Q143276 wdt:P31/wdt:P279* ?result FILTER(?result IN (wd:Q104640197, wd:Q1213562))}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q19487 wdt:P144 ?answer . ?answer wdt:P1441 wd:Q180270}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q19487 wdt:P144 ?answer . ?answer wdt:P1441 wd:Q180270} LIMIT 25 ?answer"
    },
    {
        "question": "Was the first female chancellor in Germany ever married?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {{SELECT ?fc WHERE {wd:Q183 p:P6 ?ps. ?ps ps:P6 ?fc; pq:P580 ?st. ?fc wdt:P21 wd:Q6581072} ORDER BY ASC(?st) LIMIT 1} FILTER(EXISTS{?fc p:P26/ps:P26 ?sp})}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q7090 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1037 ?x filter(contains(?x,'1')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q7090 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1037 ?x filter(contains(?x,'1')) } ORDER BY ASC(?x)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Is the Mariana Trench deeper than Mount Everest is high (above sea level)?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q510 wdt:P2044 ?d. wd:Q513 wdt:P2044 ?h. FILTER(?d + ?h < 0)}",
        "generated_sparql": "ASK WHERE { wd:Q1348 wdt:P2048 ?obj filter(?obj < 8848.0) }",
        "raw_answer": "ASK WHERE { wd:Q1348 wdt:P2048 ?obj filter(?obj < 8848.0) }\n\n## Answer (1)\n\nAsk where the depth of Mariana Trench is less than 8848.0.\n\n```\nSELECT ?obj WHERE { wd:Q1348 wdt:P2048 ?obj . ?obj wdt:P642 wd:Q1348 }\n```\n\n## Answer (0)\n\nAsk where the depth of Mariana Trench is less than 8848.0.\n\n```\nSELECT ?obj WHERE { wd:Q1348 wdt:P2048 ?obj . ?obj wdt:P642 wd:Q1348 }\n```"
    },
    {
        "question": "Is the number of countries in Europe larger than that in Asia?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {{SELECT (COUNT (DISTINCT ?ac) AS ?acc) (COUNT (DISTINCT ?ec) AS ?ecc) WHERE {?ec p:P31/ps:P31 wd:Q6256; wdt:P30 wd:Q46. ?ac p:P31/ps:P31 wd:Q6256; wdt:P30 wd:Q48.}}FILTER(?ecc > ?acc)}",
        "generated_sparql": "ASK WHERE { wd:Q48 wdt:P150 ?obj filter(?obj > 48.0) }",
        "raw_answer": "ASK WHERE { wd:Q48 wdt:P150 ?obj filter(?obj > 48.0) }\n\n## Answer (1)\n\nAsk where the number of countries in Europe is greater than 48.0.\n\n```\nSELECT ?obj WHERE { wd:Q48 wdt:P150 ?obj . ?obj wdt:P2044 wd:Q145 }\n```\n\n## Answer (0)\n\nAsk where the number of countries in Europe is greater than 48.0.\n\n```\nSELECT ?obj WHERE { wd:Q48 wdt:P150 ?obj . ?obj wdt:P2044 wd:Q145 }\n```"
    },
    {
        "question": "Is the production company of samurai champloo still existing?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q143276 wdt:P272 ?comp FILTER(NOT EXISTS{?comp wdt:P576 ?o})}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q12302 wdt:P272 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q12302 wdt:P272 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "is there female main character in hunter x hunter?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q696071 wdt:P674 ?char. ?char wdt:P21 wd:Q6581072}",
        "generated_sparql": "ASK WHERE { wd:Q80443 wdt:P674 wd:Q188541 }",
        "raw_answer": "ASK WHERE { wd:Q80443 wdt:P674 wd:Q188541 }\n\n## Answer (2)\n\nAsk where:\n\n```\nSELECT ?answer WHERE { wd:Q80443 wdt:P674 ?answer }\n```\n\nComment: I'm not sure what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000 I mean that the answer is the wd:Q188541.\n\nComment: @user1000000"
    },
    {
        "question": "Is water colorless?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q283 wdt:P462 wd:Q11567495}",
        "generated_sparql": "ASK WHERE { wd:Q283 wdt:P462 wd:Q11475 }",
        "raw_answer": "ASK WHERE { wd:Q283 wdt:P462 wd:Q11475 }\n\nSELECT ?answer WHERE { wd:Q283 wdt:P462 wd:Q11475 . ?answer wdt:P1889 wd:Q11475 }"
    },
    {
        "question": "Is Axel Rose a member of Guns N' Roses?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q11885 wdt:P463 wd:Q11895}",
        "generated_sparql": "ASK WHERE { wd:Q104901 wdt:P463 wd:Q14390 }",
        "raw_answer": "ASK WHERE { wd:Q104901 wdt:P463 wd:Q14390 }\n\nSELECT (COUNT(?obj) AS ?value ) { wd:Q104901 wdt:P463 wd:Q14390 } WHERE { ?obj wdt:P31 wd:Q5 } LIMIT 25."
    },
    {
        "question": "Is the capital of Iran bigger than that of Germany?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q794 wdt:P36/wdt:P2046 ?a1. wd:Q183 wdt:P36/wdt:P2046 ?a2. FILTER(?a1 > ?a2)}",
        "generated_sparql": "ASK WHERE { wd:Q86 wdt:P150 ?obj filter(?obj > 357500.0) }",
        "raw_answer": "ASK WHERE { wd:Q86 wdt:P150 ?obj filter(?obj > 357500.0) } WHERE { ?obj filter(?obj > 357500.0) } COMBINE ELEMENTARY PRECISION 0.0001 REDIRECT 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Is the Weser longer than the Rhine?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q1650 p:P2043/psn:P2043/wikibase:quantityAmount ?lenw. wd:Q584 p:P2043/psn:P2043/wikibase:quantityAmount ?lenr FILTER(?lenw > ?lenr)}",
        "generated_sparql": "ASK WHERE { wd:Q2278 wdt:P2043 wd:Q1188 }",
        "raw_answer": "ASK WHERE { wd:Q2278 wdt:P2043 wd:Q1188 }\n [/INST] ASK WHERE { wd:Q2278 wdt:P2043 wd:Q1188 }\n\nThis query uses the P2043 filter to determine if the length of the Weser is greater than the length of the Rhine. The result of this query will be true if the length of the Weser is greater than the length of the Rhine, and false otherwise."
    },
    {
        "question": "Is Tony Blair taller than Tiger Woods?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q9545 p:P2048/psn:P2048/wikibase:quantityAmount ?hb. wd:Q10993 p:P2048/psn:P2048/wikibase:quantityAmount ?hw FILTER(?hb > ?hw)}",
        "generated_sparql": "ASK WHERE { wd:Q1166 wdt:P2077 ?obj filter(?obj > 183.0) }",
        "raw_answer": "ASK WHERE { wd:Q1166 wdt:P2077 ?obj filter(?obj > 183.0) } ORDER BY ASC(?obj) LIMIT 25 ?obj"
    },
    {
        "question": "Is Chicago located at Lake Michigan?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q1297 wdt:P206 wd:Q1169}",
        "generated_sparql": "ASK WHERE { wd:Q130 wdt:P131 wd:Q1148 }",
        "raw_answer": "ASK WHERE { wd:Q130 wdt:P131 wd:Q1148 }"
    },
    {
        "question": "Is the district of H\u00f6xter next to the district of Paderborn?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q6228 wdt:P47 wd:Q6224}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1089 wdt:P150 ?answer . ?answer wdt:P150 wd:Q1090}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1089 wdt:P150 ?answer . ?answer wdt:P150 wd:Q1090} FROM wikidata.org/query/1065/1065.aspx"
    },
    {
        "question": "Are part of the Harz mountains in the district of Nordhausen?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q4186 wdt:P131 wd:Q7858}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11896 wdt:P131 ?answer . ?answer wdt:P150 wd:Q1085}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11896 wdt:P131 ?answer . ?answer wdt:P150 wd:Q1085} FROM wikidata EOF"
    },
    {
        "question": "How many people won the Nobel Prize in Literature or Physics since 2000?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?result) AS ?resultCnt) WHERE{?result wdt:P31 wd:Q5. ?result p:P166 ?ps. {?ps ps:P166 wd:Q37922} UNION {?ps ps:P166 wd:Q38104} ?ps pq:P585 ?time. FILTER(YEAR(?time) > 2000)}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q11476 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q11476 } ?value ASK WHERE { ?sub wdt:P166 wd:Q11476 }"
    },
    {
        "question": "How many african-american people got a star on the Hollywood Walk of Fame?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?act) AS ?result) WHERE {?act wdt:P31 wd:Q5; wdt:P166 wd:Q17985761; wdt:P172 wd:Q49085}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q188709 wdt:P161 ?X . ?X wdt:P106 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q188709 wdt:P161 ?X . ?X wdt:P106 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "With how many countries does Australia share a border?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT(DISTINCT ?country) AS ?result) WHERE {wd:Q408 wdt:P47 ?country. ?country p:P31/ps:P31 wd:Q6256}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P47 wd:Q408 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P47 wd:Q408 } FROM ASK WHERE { ?sub wdt:P47 wd:Q408 } LIMIT 25000"
    },
    {
        "question": "How many female Chinese Empresses have there been?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?result) AS ?resultCnt) WHERE {?result wdt:P39 wd:Q268218; wdt:P21 wd:Q6581072}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P25 wd:Q11998 . ?sub wdt:P21 wd:Q6581072 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P25 wd:Q11998 . ?sub wdt:P21 wd:Q6581072 } ASK WHERE { ?sub wdt:P25 wd:Q11998 . ?sub wdt:P21 wd:Q6581072 }"
    },
    {
        "question": "Of which political party was Joseph Beuys a member?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q153965 wdt:P102 ?result}",
        "generated_sparql": "select distinct ?obj where { wd:Q44204 wdt:P102 ?obj . ?obj wdt:P31 wd:Q4164871 }",
        "raw_answer": "select distinct ?obj where { wd:Q44204 wdt:P102 ?obj . ?obj wdt:P31 wd:Q4164871 } ORDER BY ASC(?obj)LIMIT 25000"
    },
    {
        "question": "In what year did the Hollywood Walk of Fame open?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q71719 wdt:P1619 ?year. BIND(YEAR(?year) AS ?result) }",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q180933 wdt:P571 ?date . BIND (YEAR(?date) AS ?answer). }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q180933 wdt:P571 ?date . BIND (YEAR(?date) AS ?answer). } LIMIT 25 ?date"
    },
    {
        "question": "on which video streaming services can i watch hunter x hunter anime series?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q70209136 wdt:P750 ?result. ?result wdt:P31 wd:Q59152282 }",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1048910 wdt:P108 ?X . ?X wdt:P457 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1048910 wdt:P108 ?X . ?X wdt:P457 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "People of what age belong to the Silent Generation ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q3044693 wdt:P582 ?time. BIND(YEAR(NOW()) - YEAR(?time) AS ?result) }",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q188668 wdt:P1831 ?X . ?X wdt:P1082 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q188668 wdt:P1831 ?X . ?X wdt:P1082 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "In what year did the district of H\u00f6xter come into existence?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q6228 wdt:P571 ?time. BIND(YEAR(?time) AS ?result)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1189 wdt:P150 ?X . ?X wdt:P571 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1189 wdt:P150 ?X . ?X wdt:P571 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Is the Linux Foundation verified on Twitter?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q858851 p:P2002/pq:P1552 wd:Q28378282}",
        "generated_sparql": "ASK WHERE { wd:Q170533 wdt:P460 wd:Q5288 }",
        "raw_answer": "ASK WHERE { wd:Q170533 wdt:P460 wd:Q5288 }"
    },
    {
        "question": "Were Angela Merkel and Tony Blair born in the same year?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q567 wdt:P569 ?da. wd:Q9545 wdt:P569 ?dt. FILTER(YEAR(?dt) = YEAR(?da))}",
        "generated_sparql": "ASK WHERE { wd:Q567 wdt:P569 wd:Q1065 . wd:Q567 wdt:P569 wd:Q1066 }",
        "raw_answer": "ASK WHERE { wd:Q567 wdt:P569 wd:Q1065 . wd:Q567 wdt:P569 wd:Q1066 }"
    },
    {
        "question": "Do more than 100000000 people speak Japanese?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q5287 wdt:P1098 ?num. FILTER(?num > 100000000)}",
        "generated_sparql": "ASK WHERE { wd:Q5288 wdt:P1136 ?obj filter(?obj > 100000000.0) }",
        "raw_answer": "ASK WHERE { wd:Q5288 wdt:P1136 ?obj filter(?obj > 100000000.0) } [/INST] ASK WHERE { wd:Q5288 wdt:P1136 ?obj filter(?obj > 100000000.0) }\nThe query starts with the word 'ASK' which indicates that it is a query that answers a question. The 'WHERE' clause is used to filter the results of the query. In this case, the 'WHERE' clause is used to filter the results of the query so that only the results that meet the condition specified in the filter are returned. The filter used in this case is '?obj > 100000000.0', which means that only the results that have a value greater than 100000000 for the object of the property P1136 will be returned. The 'P1136' is the property that represents the number of people that speak the language. The '?obj' is a variable that represents the value of the object of the property. The 'filter' function is used to specify the condition that the value of the object of the property must meet in order to be included in the results of the query."
    },
    {
        "question": "Tell me all the cast members of the film Red Notice directed by Rawson Marshall Thurber ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q58815001 wdt:P57 wd:Q2745616; wdt:P161 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q91658844 wdt:P161 ?X . ?X wdt:P161 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q91658844 wdt:P161 ?X . ?X wdt:P161 ?answer} TIME LIMIT 0\n\n## Answer (1)\n\nI have no idea what the time limit is for, but I'd suggest using the following query instead:\n\n```\nSELECT ?answer WHERE { wd:Q91658844 wdt:P161 ?X . ?X wdt:P161 ?answer}\n```\n\nThis query is the same as the previous one, but it doesn't have the time limit.\n\nComment: The time limit is 10 seconds."
    },
    {
        "question": "The first album of Jay Chou",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{?result wdt:P31 wd:Q482994; wdt:P175 wd:Q238819; wdt:P577 ?date. } ORDER BY ASC(?date) LIMIT 1",
        "generated_sparql": "select distinct ?obj where { wd:Q4638 wdt:P264 ?obj . ?obj wdt:P31 wd:Q273057 }",
        "raw_answer": "select distinct ?obj where { wd:Q4638 wdt:P264 ?obj . ?obj wdt:P31 wd:Q273057 } ORDER BY ASC(?obj)LIMIT 5 0"
    },
    {
        "question": "Through which countries does the Danube go?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q1653 wdt:P17 ?result}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P463 wd:Q3819 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P463 wd:Q3819 } ASK\n\nThe answer is the number of countries that the Danube river flows through, according to the knowledge graph Wikidata."
    },
    {
        "question": "What do sperm whales mainly eat?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q81214 wdt:P1034 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q16612 wdt:P108 ?X . ?X wdt:P1066 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q16612 wdt:P108 ?X . ?X wdt:P1066 ?answer} LIMIT 25 ?X\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Was Frida Kahlo a surrealist?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q5588 wdt:P135 wd:Q39427}",
        "generated_sparql": "ASK WHERE { wd:Q5588 wdt:P135 wd:Q17500 }",
        "raw_answer": "ASK WHERE { wd:Q5588 wdt:P135 wd:Q17500 }"
    },
    {
        "question": "Was Funny Games and its remake directed by different persons?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q696928 wdt:P57 ?dir. wd:Q951002 wdt:P57 ?dir2. FILTER(?dir != ?dir2)}",
        "generated_sparql": "ASK WHERE { ?x0 wdt:P31 wd:Q5 . ?x1 wdt:P57 ?x0 . wd:Q696928 wdt:P57 ?x1 . FILTER ( ?x0 != ?x1 ) }",
        "raw_answer": "ASK WHERE { ?x0 wdt:P31 wd:Q5 . ?x1 wdt:P57 ?x0 . wd:Q696928 wdt:P57 ?x1 . FILTER ( ?x0 != ?x1 ) } LIMIT 25 ?x1"
    },
    {
        "question": "Was Google founded by Bill Gates?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{wd:Q95 wdt:P112 wd:Q5284}",
        "generated_sparql": "ASK WHERE { wd:Q95 wdt:P112 wd:Q148 }",
        "raw_answer": "ASK WHERE { wd:Q95 wdt:P112 wd:Q148 }"
    },
    {
        "question": "What is the second letter in the Greek alphabet?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{?fl wdt:P31 wd:Q19793459; wdt:P361 wd:Q8216. ?fl wdt:P156 ?result FILTER(NOT EXISTS{?fl wdt:P155 ?we})}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q49174 p:P282 ?s . ?s ps:P282 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q49174 p:P282 ?s . ?s ps:P282 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) } ORDER BY ASC(?x)LIMIT 25 ?s { FILTER (lang(?x) = 'en') } ORDER BY ASC(?x)LIMIT 25"
    },
    {
        "question": "Was it the cancer that caused the death of Steve Jobs who was the CEO of Apple?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q19837 wdt:P509/wdt:P279* wd:Q12078 }",
        "generated_sparql": "ASK WHERE { wd:Q19837 wdt:P509 wd:Q81559 . wd:Q81559 wdt:P106 wd:Q12136 }",
        "raw_answer": "ASK WHERE { wd:Q19837 wdt:P509 wd:Q81559 . wd:Q81559 wdt:P106 wd:Q12136 }"
    },
    {
        "question": "Was Shaquille O'Neal the teammate of Kobe Bryant in the year of 2000?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q25369 p:P54 ?ps1. ?ps1 ps:P54 ?team; pq:P580 ?st1; pq:P582 ?et1. wd:Q169452 p:P54 ?ps2. ?ps2 ps:P54 ?team; pq:P580 ?st2; pq:P582 ?et2. FILTER(YEAR(?st1) <= 2000 && YEAR(?et1) >= 2000 && YEAR(?st2) <= 2000 && YEAR(?et2) >= 2000)}",
        "generated_sparql": "ASK WHERE { wd:Q4145 wdt:P54 wd:Q4141 . wd:Q4145 wdt:P54 wd:Q11593 }",
        "raw_answer": "ASK WHERE { wd:Q4145 wdt:P54 wd:Q4141 . wd:Q4145 wdt:P54 wd:Q11593 }"
    },
    {
        "question": "Was Shaquille O'Neal, as the basketball player, also an film actor?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q169452 wdt:P106 wd:Q3665646, wd:Q10800557}",
        "generated_sparql": "ASK WHERE { wd:Q11591 wdt:P463 wd:Q6501 }",
        "raw_answer": "ASK WHERE { wd:Q11591 wdt:P463 wd:Q6501 }\n\nRELEASE NOTES:\n\n* Included filter to get only the actor of basketball.\n* Also, the wd:Q11591 is the actor of basketball.\n\n## Answer (1)\n\nAsk where is true that wd:Q11591 is actor of wd:Q6501 and wd:Q11591 is actor of wd:Q6501.\n\n```\n ASK WHERE { wd:Q11591 wdt:P463 wd:Q6501 . wd:Q11591 wdt:P463 wd:Q6501 }\n```\n\nComment: I'm not sure if this is the best way to do it, but I think this is the correct answer."
    },
    {
        "question": "Was the first album of the band Darkside released in 2012?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {?album wdt:P31 wd:Q482994; wdt:P175 wd:Q16954319; wdt:P577 ?date FILTER(NOT EXISTS{?album2 wdt:P31 wd:Q482994; wdt:P175 wd:Q16954319; wdt:P577 ?date2 FILTER(?date2 < ?date)} && YEAR(?date) = 2012)}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q112274 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2012')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q112274 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2012')) } ORDER BY ASC(?x)LIMIT 25."
    },
    {
        "question": "What are the spin-offs of Breaking Bad?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1079 wdt:P2512 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1079 wdt:P155 ?X . ?X wdt:P156 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1079 wdt:P155 ?X . ?X wdt:P156 ?answer}"
    },
    {
        "question": "Which river flows through the Grand Canyon?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q4022. wd:Q118841 wdt:P206 ?result}",
        "generated_sparql": "select distinct ?obj where { wd:Q4630 wdt:P206 ?obj . ?obj wdt:P31 wd:Q4022 }",
        "raw_answer": "select distinct ?obj where { wd:Q4630 wdt:P206 ?obj . ?obj wdt:P31 wd:Q4022 } ORDER BY ASC(?obj)LIMIT 5 0\n\n    SELECT DISTINCT ?obj WHERE { wd:Q4630 wdt:P206 ?obj . ?obj wdt:P31 wd:Q4022 } ORDER BY ASC(?obj)LIMIT 5 0\n\n0 results"
    },
    {
        "question": "What was the key event related to Salvador Dal\u00ed?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q5577 wdt:P793 ?result}",
        "generated_sparql": "select distinct ?obj where { wd:Q5577 wdt:P793 ?obj . ?obj wdt:P31 wd:Q178489 }",
        "raw_answer": "select distinct ?obj where { wd:Q5577 wdt:P793 ?obj . ?obj wdt:P31 wd:Q178489 } ORDER BY ASC(?obj)LIMIT 25..25\n\n\n\nThe SPARQL query for this request is:\n\n\n\nSELECT DISTINCT ?obj WHERE { wd:Q5577 wdt:P793 ?obj . ?obj wdt:P31 wd:Q178489 } ORDER BY ASC(?obj)LIMIT 25..25\n\n\n\nThis query will return a list of the key events related to Salvador Dal\u00ed. The results are ordered in ascending order and limited to 25."
    },
    {
        "question": "Who passed the German Occupational Safety and Health Act?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?act wdt:P31 wd:Q1006079; wdt:P361 wd:Q629029; wdt:P1001 wd:Q183; wdt:P467 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q165686 wdt:P155 ?X . ?X wdt:P61 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q165686 wdt:P155 ?X . ?X wdt:P61 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "What are the German names of academic disciplines containing \u201clinguistik\u201d?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?disc wdt:P31 wd:Q11862829; rdfs:label ?result FILTER(langMatches(lang(?result),\"de\") && regex(?result,\"linguistik\"))}",
        "generated_sparql": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131528 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'linguistik')) . FILTER (lang(?sbj_label) = 'en') }",
        "raw_answer": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131528 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'linguistik')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25000"
    },
    {
        "question": "What are the names of the head of states of Germany and France ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {{wd:Q183 wdt:P35 ?result} UNION {wd:Q142 wdt:P35 ?result}}",
        "generated_sparql": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q183 wdt:P35 ?ans_1 . wd:Q1427 wdt:P35 ?ans_2 }",
        "raw_answer": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q183 wdt:P35 ?ans_1 . wd:Q1427 wdt:P35 ?ans_2 } LIMIT 25 ?ans_1 ?ans_2"
    },
    {
        "question": "What are the professions of John Lennon\u2019s sons?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?son wdt:P22 wd:Q1203; wdt:P31 wd:Q5; wdt:P106 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1203 wdt:P40 ?X . ?X wdt:P106 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1203 wdt:P40 ?X . ?X wdt:P106 ?answer} LIMIT 25 . FOR ALL ?X WHERE { ?X wdt:P106 wd:Q47240 } ORDER BY ASC(?answer)LIMIT 25 { bd:fileObject(?answer) } ASK WHERE { ?X wdt:P106 wd:Q47240 } LIMIT 25 { bd:fileObject(?answer) }"
    },
    {
        "question": "What are the titles of the Star Wars series movies?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?film wdt:P1476 ?result; wdt:P179 wd:Q22092344 FILTER(EXISTS{?film wdt:P31/wdt:P279* wd:Q11424})}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P179 wd:Q462547 . ?sbj wdt:P31 wd:Q13718475 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P179 wd:Q462547 . ?sbj wdt:P31 wd:Q13718475 } ORDER BY ASC(?sbj)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "What came first: the TV show The Flintstones or the end of racial discrimination in voting in the US ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{ BIND(IF(EXISTS{wd:Q201358 wdt:P580 ?date1. wd:Q1608064 wdt:P577 ?date2. FILTER(?date1 < ?date2)},wd:Q201358 , wd:Q1608064) AS ?result)}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q10686 p:P793 ?s . ?s ps:P793 wd:Q11362 . ?s pq:P1545 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q10686 p:P793 ?s . ?s ps:P793 wd:Q11362 . ?s pq:P1545 ?value} ORDER BY DESC(?value)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "What colors does the German national flag have?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q48160 wdt:P462 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q19648 wdt:P462 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q19648 wdt:P462 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "What did the suffragettes stand for?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q322170 wdt:P279/wdt:P425/wdt:P3712 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q189007 wdt:P1269 ?X . ?X wdt:P140 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q189007 wdt:P1269 ?X . ?X wdt:P140 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "What do you call a female form of an emperor in English?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q39018 wdt:P2521 ?result. FILTER(langMatches(lang(?result),\"en\"))}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q16422 p:P460 ?s . ?s ps:P460 ?obj . ?s pq:P407 wd:Q9312 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q16422 p:P460 ?s . ?s ps:P460 ?obj . ?s pq:P407 wd:Q9312 } ORDER BY ASC(?s)LIMIT 25 ?s"
    },
    {
        "question": "What event killed the most people in the years 1910 to 1920?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P1120 ?num; wdt:P580 ?st; wdt:P582 ?et. FILTER((EXISTS{?result wdt:P31/wdt:P279* wd:Q1190554}) &&(YEAR(?st) >= 1910) && (YEAR(?et) <= 1920))}ORDER BY DESC(?num) LIMIT 1",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q10747 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1910')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q10747 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1910')) } ORDER BY ASC(?x)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Does the ATI Company still exist?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {FILTER(NOT EXISTS {wd:Q213849 wdt:P576 ?o})}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q18293 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P1366 wd:Q18293 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q18293 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P1366 wd:Q18293 } ORDER BY ASC(?s)LIMIT 25..25"
    },
    {
        "question": "What happened to the dinosaurs ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q430 wdt:P793 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11202 wdt:P140 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11202 wdt:P140 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "What instruments did Louis Armstrong play?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1779 wdt:P1303 ?result}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P1303 wd:Q104340 . ?sbj wdt:P31 wd:Q134058 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P1303 wd:Q104340 . ?sbj wdt:P31 wd:Q134058 } ORDER BY ASC(?sbj)LIMIT 25000"
    },
    {
        "question": "what did the author of the phrase: \"Alea iacta est\" die of?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q271723 wdt:P50/wdt:P509 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q133823 wdt:P50 ?answer . ?answer wdt:P509 wd:Q11525}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q133823 wdt:P50 ?answer . ?answer wdt:P509 wd:Q11525} LIMIT 25 ?answer"
    },
    {
        "question": "What is the binary gender of the partner of Allen Ginsberg ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q6711 wdt:P451/wdt:P21 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q40000 wdt:P26 ?X . ?X wdt:P21 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q40000 wdt:P26 ?X . ?X wdt:P21 ?answer} ORDER BY ASC(?answer)LIMIT 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "What is the capital of the prefecture Tokyo ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1490 wdt:P36 ?result}",
        "generated_sparql": "select distinct ?obj where { wd:Q1811 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q515 }",
        "raw_answer": "select distinct ?obj where { wd:Q1811 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q515 } ORDER BY ASC(?obj)LIMIT 25 25 ?obj wdt:P31 wd:Q515"
    },
    {
        "question": "What is the Chinese zodiac animal that follows the ox?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q79226802; wdt:P155 wd:Q599644}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q11436 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P156 wd:Q188540 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q11436 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P156 wd:Q188540 } ORDER BY ASC(?s)LIMIT 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "What is the combined total revenue of three largest Big Tech companies ordered by number of employees?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (SUM(?rev) AS ?result) WHERE {{SELECT DISTINCT ?company WHERE {?company wdt:P361 wd:Q30748112. ?company wdt:P1128 ?num} ORDER BY DESC(?num) LIMIT 3} ?company p:P2139 ?ps. ?ps ps:P2139 ?rev; pq:P585 ?time. FILTER(NOT EXISTS{?company p:P2139/pq:P585 ?time2 FILTER(?time2 > ?time)})}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q106916 p:P2139 ?s . ?s ps:P2139 ?obj . ?s pq:P1101 ?x filter(contains(?x,'3.0')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q106916 p:P2139 ?s . ?s ps:P2139 ?obj . ?s pq:P1101 ?x filter(contains(?x,'3.0')) } ORDER BY DESC(?x)LIMIT 5"
    },
    {
        "question": "What is the coordinate location of Shenzhen ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT  DISTINCT ?result WHERE {wd:Q15174 wdt:P625 ?result}",
        "generated_sparql": "select distinct ?answer where { wd:Q1283 wdt:P625 ?answer}",
        "raw_answer": "select distinct ?answer where { wd:Q1283 wdt:P625 ?answer}"
    },
    {
        "question": "What is the Erlangen program ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q315296 wdt:P31 ?result}",
        "generated_sparql": "select distinct ?answer where { ?answer wdt:P287 wd:Q165755}",
        "raw_answer": "select distinct ?answer where { ?answer wdt:P287 wd:Q165755} LIMIT 25 ?answer"
    },
    {
        "question": "Did the Roland Corporation produce synthesizers?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {?result wdt:P31 wd:Q163829; wdt:P176 wd:Q848490}",
        "generated_sparql": "ASK WHERE { wd:Q132121 wdt:P176 wd:Q165910 }",
        "raw_answer": "ASK WHERE { wd:Q132121 wdt:P176 wd:Q165910 }"
    },
    {
        "question": "How many perople do the Port of Rotterdam employ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1027807 wdt:P1128 ?result}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q172062 wdt:P108 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q172062 wdt:P108 ?obj } ?value ASK WHERE { wd:Q172062 wdt:P108 ?obj }"
    },
    {
        "question": "what is the main subject of the manga \"your lie in april\": primary school, middle school or high school student?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q11419997 wdt:P921 ?result. FILTER(?result IN (wd:Q16003605, wd:Q16003532, wd:Q15360275))}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q18220111 wdt:P170 ?answer . ?answer wdt:P69 wd:Q1192307}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q18220111 wdt:P170 ?answer . ?answer wdt:P69 wd:Q1192307} ORDER BY ASC(?answer)LIMIT 5"
    },
    {
        "question": "What is the mother tongue of the author Chimamanda Ngozi Adichie ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q230141 wdt:P103 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q237277 wdt:P50 ?X . ?X wdt:P1412 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q237277 wdt:P50 ?X . ?X wdt:P1412 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Who was the partner of Allen Ginsberg?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q6711 wdt:P451 ?result}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P451 wd:Q131511 . ?sbj wdt:P31 wd:Q5 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P451 wd:Q131511 . ?sbj wdt:P31 wd:Q5 } ORDER BY ASC(?sbj)LIMIT 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "What is the second game developed by Piranha Bytes?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{?result wdt:P178 wd:Q677273; wdt:P577 ?date} ORDER BY ASC(?date) OFFSET 1 LIMIT 1",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q332213 p:P1412 ?s . ?s ps:P1412 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q332213 p:P1412 ?s . ?s ps:P1412 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) } ORDER BY ASC(?x)LIMIT 25 ?s \n\nSELECT ?obj WHERE { wd:Q332213 p:P1412 ?s . ?s ps:P1412 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) } ORDER BY ASC(?x)LIMIT 25 ?s"
    },
    {
        "question": "What is the TV-show that starred Rowan Atkinson , had 4 seasons and started in 1983?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{?result wdt:P31 wd:Q5398426; wdt:P161 wd:Q23760; wdt:P2437 ?season; wdt:P580 ?time FILTER((YEAR(?time) = 1983) && (?season = 4))}",
        "generated_sparql": "SELECT DISTINCT ?x0 WHERE { ?x0 wdt:P31 wd:Q5398426 . ?x0 wdt:P1061 wd:Q33796 . ?x0 wdt:P1431 wd:Q17335 . ?x0 wdt:P155 wd:Q1052377 }",
        "raw_answer": "SELECT DISTINCT ?x0 WHERE { ?x0 wdt:P31 wd:Q5398426 . ?x0 wdt:P1061 wd:Q33796 . ?x0 wdt:P1431 wd:Q17335 . ?x0 wdt:P155 wd:Q1052377 } LIMIT 25 25 DISTINCT ?x0\n\nDESCRIPTION \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "What is the english nickname of Ella Fitzgerald?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1768 wdt:P1449 ?result. FILTER(langMatches(lang(?result),\"en\"))}",
        "generated_sparql": "select distinct ?obj where { wd:Q104350 wdt:P460 ?obj . ?obj wdt:P31 wd:Q2002301 }",
        "raw_answer": "select distinct ?obj where { wd:Q104350 wdt:P460 ?obj . ?obj wdt:P31 wd:Q2002301 } ORDER BY ASC(?obj)LIMIT 25...."
    },
    {
        "question": "What are the occupations of Kazuo Ishiguro\u2019s daughter?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q272855 wdt:P40 ?d. ?d wdt:P21 wd:Q6581072; wdt:P106 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q262722 wdt:P40 ?X . ?X wdt:P106 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q262722 wdt:P40 ?X . ?X wdt:P106 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "What are the occupations of Nat King Cole?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q137042 wdt:P106 ?result}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q180292 wdt:P106 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q180292 wdt:P106 ?obj } ASK"
    },
    {
        "question": "what is the official language of iran?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q794 wdt:P37 ?result}",
        "generated_sparql": "select distinct ?answer where { wd:Q812 wdt:P37 ?answer}",
        "raw_answer": "select distinct ?answer where { wd:Q812 wdt:P37 ?answer}"
    },
    {
        "question": "What is the population in Freiburg ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q2833 wdt:P1082 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q1057 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q3483 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q1057 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q3483 } ORDER BY ASC(?obj)LIMIT 5"
    },
    {
        "question": "What is the title of the 2020 released movie in which Carey Mulligan was the main actress?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?movie wdt:P31 wd:Q11424; wdt:P161 wd:Q219655; wdt:P577 ?time; wdt:P1476 ?result FILTER(YEAR(?time) = 2020)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q230522 wdt:P161 ?answer . ?answer wdt:P577 ?x FILTER(contains(YEAR(?x),'2020'))}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q230522 wdt:P161 ?answer . ?answer wdt:P577 ?x FILTER(contains(YEAR(?x),'2020'))} LIMIT 25 ?x DESC\n\n## Answer (1)\n\nI'm not sure what you mean by \"main actress\". If you mean the actor with the highest number of appearances, the query would be:\n\n```\nSELECT ?answer WHERE { wd:Q230522 wdt:P161 ?answer . ?answer wdt:P577 ?x FILTER(contains(YEAR(?x),'2020'))} LIMIT 25 ?x DESC\n```\n\nIf you mean the actor with the highest number of appearances, the query would be:\n\n```\nSELECT ?answer WHERE { wd:Q230522 wdt:P161 ?answer . ?answer wdt:P577 ?x FILTER(contains(YEAR(?x),'2020'))} LIMIT 25 ?x DESC\n```\n\nComment: I mean the actor with the highest number of appearances."
    },
    {
        "question": "What does Ray-Ban produce primarily?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q653941 wdt:P1056 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q189937 wdt:P1056 ?X . ?X wdt:P1056 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q189937 wdt:P1056 ?X . ?X wdt:P1056 ?answer} ORDER BY ASC(?answer)LIMIT 5"
    },
    {
        "question": "What language did the famous king, who was also a student of Aristotle's , speak?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q868 wdt:P802 ?king. ?king wdt:P97 wd:Q12097; wdt:P1412 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10484 wdt:P1411 ?answer . ?answer wdt:P2936 wd:Q868}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10484 wdt:P1411 ?answer . ?answer wdt:P2936 wd:Q868} ORDER BY ASC(?answer)LIMIT 25 .ORDER BY DESC(?answer)LIMIT 25"
    },
    {
        "question": "What language do they speak in Poland ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q36 wdt:P2936 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q36 wdt:P37 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q36 wdt:P37 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "How many different languages are spoken in West Europe?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?lan) AS ?result) WHERE {wd:Q27496 wdt:P527/wdt:P2936 ?lan}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P407 wd:Q142 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P407 wd:Q142 } ?value ASK"
    },
    {
        "question": "Is Germany bigger than Poland?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q183 p:P2046/psn:P2046/wikibase:quantityAmount ?ag. wd:Q36 p:P2046/psn:P2046/wikibase:quantityAmount ?ap FILTER(?ag > ?ap)}",
        "generated_sparql": "ASK WHERE { wd:Q183 wdt:P2044 wd:Q162 }",
        "raw_answer": "ASK WHERE { wd:Q183 wdt:P2044 wd:Q162 }\n\nSELECT ?obj WHERE { wd:Q183 wdt:P2044 ?obj . ?obj wdt:P31 wd:Q28040 } LIMIT 25 25 { bd25 }"
    },
    {
        "question": "What notes does a C major chord consist of?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q55706505 wdt:P527 ?result. ?result wdt:P31 wd:Q263478}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131127 wdt:P1545 ?X . ?X wdt:P144 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131127 wdt:P1545 ?X . ?X wdt:P144 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "How many different occupations did/do spouses of winners of the Nobel Prize in Literature hold?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?occ) AS ?result) WHERE {?winner wdt:P166 wd:Q37922; wdt:P26/wdt:P106 ?occ}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P106 wd:Q47480 . ?sub wdt:P26 ?x filter(contains(?x,'w.0.B.13.1')) }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P106 wd:Q47480 . ?sub wdt:P26 ?x filter(contains(?x,'w.0.B.13.1')) } STASK: ?value ASK: ?x FILTER ( wd:Q47480 != ?x )"
    },
    {
        "question": "How many other video games began the same year as Dead by Daylight?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?game) AS ?result) WHERE {?game wdt:P31/wdt:P279* wd:Q7889; wdt:P577 ?gameTime. wd:Q24514682 wdt:P577 ?dbdtime. FILTER((YEAR(?gameTime) = YEAR(?dbdtime)))}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q58168000 wdt:P400 ?X . ?X wdt:P571 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q58168000 wdt:P400 ?X . ?X wdt:P571 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "What other civilizations existed during the Aztecs ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31/wdt:P279* wd:Q8432; wdt:P580 ?start; wdt:P582 ?end. wd:Q12542 wdt:P580 ?ast; wdt:P582 ?aet. FILTER(?start < ?aet && ?end > ?ast && ?result != wd:Q12542) }",
        "generated_sparql": "select distinct ?obj where { wd:Q17333 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q16521 }",
        "raw_answer": "select distinct ?obj where { wd:Q17333 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q16521 } ORDER BY ASC(?obj)LIMIT 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "What brand uses petroleum jelly?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P1056 wd:Q457239; wdt:P31/wdt:P279 wd:Q431289}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P1545 wd:Q215666 . ?sbj wdt:P31 wd:Q178880 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P1545 wd:Q215666 . ?sbj wdt:P31 wd:Q178880 } ORDER BY ASC(?sbj)LIMIT 5"
    },
    {
        "question": "How many other musical films were launched the same year as Grease?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?result) AS ?resultCnt) WHERE {?result wdt:P31/wdt:P279* wd:Q11424; wdt:P136 wd:Q842256; wdt:P577 ?date. wd:Q267721 wdt:P577 ?dateG FILTER((YEAR(?date)=YEAR(?dateG)) && (?result != wd:Q267721))}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P355 wd:Q19000 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P355 wd:Q19000 } WHERE{ ?sub wdt:P355 wd:Q19000 }GROUP by ?sub\n\n## Answer (2)\n\nYou can use the following query:\n\n```\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P355 wd:Q19000 } WHERE{ ?sub wdt:P355 wd:Q19000 }GROUP by ?sub\n```\n\nThis query will give you the number of films that were released in the same year as Grease.\n\n## Answer (0)\n\nYou can use the following query:\n\n```\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P355 wd:Q19000 } WHERE{ ?sub wdt:P355 wd:Q19000 }GROUP by ?sub\n```\n\nThis query will give you the number of films that were released in the same year as Grease."
    },
    {
        "question": "Which creator of The OA also acted in it?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q19798744 wdt:P170 ?result; wdt:P161 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q28904093 wdt:P161 ?answer . wd:Q28904093 wdt:P57 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q28904093 wdt:P161 ?answer . wd:Q28904093 wdt:P57 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "What albums has Atif Aslam been on?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q482994; wdt:P175 wd:Q755830}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P175 wd:Q129121 . ?sbj wdt:P31 wd:Q134556 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P175 wd:Q129121 . ?sbj wdt:P31 wd:Q134556 } ORDER BY ASC(?sbj)LIMIT 5"
    },
    {
        "question": "What was Ada Lovelace\u2019s noble title?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q7259 wdt:P97 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q10836 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q10836 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) } ORDER BY ASC(?x)LIMIT 25 ?s { FILTER (lang(?x) = 'en') } ORDER BY ASC(?x)LIMIT 25\n\nID: 18866788-907e-4f1e-908e-100000000000\nDBpedia was not able to find any answer for your question: 'What was Ada Lovelace\u2019s noble title?' if you have any other question please contact us."
    },
    {
        "question": "What was Janus the god of?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q167685 wdt:P2925 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131122 wdt:P175 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131122 wdt:P175 ?answer } LIMIT 25 ?answer . FILTER (lang(?answer) != en)\n\nThis query returns the name of the god Janus. The limit of 25 is used to prevent the query from taking too long to execute. The FILTER (lang(?answer) != en) is used to return the name of the god in a language other than English."
    },
    {
        "question": "Who was the fellow Hobbit who was an enemy of Frodo?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q177329 wdt:P7047 ?result. ?result wdt:P31 wd:Q74359}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P175 wd:Q9033 . ?sbj wdt:P31 wd:Q3301511 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P175 wd:Q9033 . ?sbj wdt:P31 wd:Q3301511 } ORDER BY ASC(?sbj)LIMIT 5"
    },
    {
        "question": "What was the last painting that Van Gogh painted?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q3305213; wdt:P170 wd:Q5582; wdt:P571 ?date} ORDER BY DESC(?date) LIMIT 1",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q5588 p:P1299 ?s . ?s ps:P1299 ?obj . ?s pq:P1545 ?x filter(contains(?x,'100')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q5588 p:P1299 ?s . ?s ps:P1299 ?obj . ?s pq:P1545 ?x filter(contains(?x,'100')) } ORDER BY DESC(?x)LIMIT 50 0 { SELECT ?obj WHERE { wd:Q5588 p:P1299 ?s . ?s ps:P1299 ?obj . ?s pq:P1545 ?x filter(contains(?x,'100')) } ORDER BY DESC(?x)LIMIT 50 0 }"
    },
    {
        "question": "What was the main subject addressed in the Deep Purple song \u201cSmoke on the water\u201d?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q636399 wdt:P921 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q180905 wdt:P86 ?answer . ?answer wdt:P1441 wd:Q180905}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q180905 wdt:P86 ?answer . ?answer wdt:P1441 wd:Q180905} LIMIT 25 ?answer"
    },
    {
        "question": "When did the first sperm whales exist?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q81214 wdt:P580 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131512 wdt:P571 ?X . ?X wdt:P580 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131512 wdt:P571 ?X . ?X wdt:P580 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "What year did the Berlin Wall fall?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q5086 wdt:P576 ?time BIND(YEAR(?time) AS ?result)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q8469 wdt:P580 ?date . BIND (YEAR(?date) AS ?answer). }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q8469 wdt:P580 ?date . BIND (YEAR(?date) AS ?answer). }\n\nThis query uses the P580 wikidata property which gives the date of an event, and the BIND function to convert the date to a year."
    },
    {
        "question": "What year was Riverdale first aired?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q23001951 wdt:P580 ?time. BIND(YEAR(?time) AS ?result)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1084294 wdt:P464 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1084294 wdt:P464 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "When did Allen Ginsberg die?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q6711 wdt:P570 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q40612 wdt:P570 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q40612 wdt:P570 ?answer . } ORDER BY ASC(?answer)LIMIT 25 ?answer"
    },
    {
        "question": "When did Ella Fitzgerald die?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1768 wdt:P570 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q180115 wdt:P570 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q180115 wdt:P570 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "when did human first start to bouldering?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q852989 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q189787 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q189787 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When did Pakistan become independent?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q843 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q48 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q48 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When did Rumi die?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q43347 wdt:P570 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131512 wdt:P570 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131512 wdt:P570 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When did the brother of the author of Slaughterhouse Five die?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q265954 wdt:P50/wdt:P3373 ?bro. ?bro wdt:P21 wd:Q6581097; wdt:P570 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q190472 wdt:P50 ?X . ?X wdt:P570 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q190472 wdt:P50 ?X . ?X wdt:P570 ?answer}"
    },
    {
        "question": "when was the creator of saturday night live born?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q13979 wdt:P170/wdt:P569 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1189 wdt:P170 ?X . ?X wdt:P569 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1189 wdt:P170 ?X . ?X wdt:P569 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Who was part of the Hambach Festival?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q551416 wdt:P710 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q188089 wdt:P710 ?X . ?X wdt:P463 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q188089 wdt:P710 ?X . ?X wdt:P463 ?answer} MINUS { ?answer wdt:P31 wd:Q5 } ORDER ASC(?answer)LIMIT 25000000 { ?answer wdt:P31 wd:Q5 } \n\nEXPLAINATION: This query uses the SPARQL query language to retrieve the answer to the request. The SELECT statement specifies that the answer to the query should be the value of the variable ?answer. The WHERE clause contains a filter that only selects the rows where the value of the property wdt:P710 of the object wd:Q188089 is not equal to the value of the variable ?X. The ORDER BY clause sorts the results in ascending order by the value of the variable ?answer. The LIMIT clause limits the number of results returned by the query to 25000000. The EXPLAINATION clause explains the query."
    },
    {
        "question": "When did The OA was first released?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q19798744 wdt:P580 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q5713931 wdt:P577 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q5713931 wdt:P577 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "How many casualties were a result of the Troubles?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q815436 wdt:P1120 ?result}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1346 wd:Q10751 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1346 wd:Q10751 }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "When did the Weimar Republic start?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q41304 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q151361 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q151361 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When did World War II officially end?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q362 wdt:P582 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q362 p:P582 ?s . ?s ps:P582 ?obj . ?s pq:P1534 wd:Q11907533 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q362 p:P582 ?s . ?s ps:P582 ?obj . ?s pq:P1534 wd:Q11907533 } ORDER LIMIT 25 OFFSET 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "when is the first ironman world championship?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q1420480 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q188588 wdt:P577 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q188588 wdt:P577 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "when was the magazine in which hunter x hunter is published established?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q696071 wdt:P1433 ?mag. ?mag wdt:P31/wdt:P279* wd:Q41298; wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1048912 wdt:P1433 ?X . ?X wdt:P571 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1048912 wdt:P1433 ?X . ?X wdt:P571 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "When the film Red Notice was released?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q58815001 wdt:P577 ?result}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q918010 p:P577 ?s . ?s ps:P577 ?x filter(contains(?x,'2021-02-11')) . ?s pq:P585 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q918010 p:P577 ?s . ?s ps:P577 ?x filter(contains(?x,'2021-02-11')) . ?s pq:P585 ?value} ORDER BY DESC(?value)LIMIT 25 ?x defined [ https://www.wikidata.org/query/108691/def/desc/?x . ]"
    },
    {
        "question": "When was Cologne Cathedral built?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q4176 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q105967 wdt:P571 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q105967 wdt:P571 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "What can be done against gout?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q133087 wdt:P2176 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q182222 wdt:P780 ?X . ?X wdt:P2176 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q182222 wdt:P780 ?X . ?X wdt:P2176 ?answer}"
    },
    {
        "question": "When was HIV first identified?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q15787 wdt:P575 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q132107 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q132107 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the first article about Liquid State Machines published?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{?art wdt:P31/wdt:P279* wd:Q191067; wdt:P921 wd:Q6557482; wdt:P577 ?result} ORDER BY ASC(?result) LIMIT 1",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q161573 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q161573 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was Marlene Dietrich born?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q4612 wdt:P569 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q76785 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q188406 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q76785 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q188406 } ORDER LIMIT 25 OFFSET 0\n\n## Answer (1)\n\nSELECT ?obj WHERE { wd:Q76785 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q188406 } ORDER LIMIT 25 OFFSET 0\n\nComment: This is not an answer.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was Marlene Dietrich born?\" by returning the date of her birth.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was Marlene Dietrich born?\" by returning the date of her birth.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was Marlene Dietrich born?\" by returning the date of her birth.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was Marlene Dietrich born?\" by returning the date of her birth.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was Marlene Dietrich born?\" by returning the date of her birth.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was Marlene Dietrich born?\" by returning the date of her birth.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was Marlene Dietrich born?\" by returning the date of her birth.\n\nComment: @JosephLeDuc I'm sorry, I don't understand what you mean. This query answers the question \"When was"
    },
    {
        "question": "When was Penicillin discovered?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q12190 wdt:P575 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q42303 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q42303 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was Rumi born?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q43347 wdt:P569 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q131447 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q181880 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q131447 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q181880 } ORDER LIMIT 25 OFFSET 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "When was the beginning of Romanticism ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q37068 wdt:P580 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10741 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10741 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the Echo Music Prize abolished?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q703237 wdt:P576 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1988879 wdt:P576 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1988879 wdt:P576 ?answer . } LIMIT 25 ?contextID\n\nSELECT ?answer WHERE { wd:Q1988879 wdt:P576 ?answer . } LIMIT 25 ?contextID"
    },
    {
        "question": "When was the first album of the American band Typhoon released?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{?alb wdt:P31 wd:Q482994; wdt:P175 wd:Q7861093; wdt:P577 ?result} ORDER BY ASC(?result) LIMIT 1",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1198089 wdt:P264 ?X . ?X wdt:P577 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1198089 wdt:P264 ?X . ?X wdt:P577 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "When was the Hamburg Airport inaugurated?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q27706 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q188872 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q188872 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the Hamburg S-Bahn officially opened?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q693956 wdt:P1619 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q172989 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q172989 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the jazz club Birdland in Hamburg founded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q800176 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q196789 p:P740 ?s . ?s ps:P740 wd:Q1198765 . ?s pq:P580 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q196789 p:P740 ?s . ?s ps:P740 wd:Q1198765 . ?s pq:P580 ?value} ORDER BY DESC(?value)LIMIT 5`{\n    \"desc\": \"When was the jazz club Birdland in Hamburg founded?\",\n    \"type\": \"completion\",\n    \"source\": \"Primo.java\",\n    \"version\": \"0.0.4\"\n}\nSELECT ?value WHERE { wd:Q196789 p:P740 ?s . ?s ps:P740 wd:Q1198765 . ?s pq:P580 ?value} ORDER BY DESC(?value)LIMIT 5\n```"
    },
    {
        "question": "When was the poem Howl written?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q1545259 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q185027 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q185027 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the university of Cambridge founded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q35794 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131252 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131252 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the University of Hamburg founded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q156725 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q153006 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q153006 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the University of Saskatchewan founded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q1514848 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q132832 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q132832 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was the Vatican City created?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q237 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q20 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q20 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "When was United Fruit Company founded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q1771942 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q184165 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q184165 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "Where did Trotzky die?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q33391 wdt:P20 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q45204 wdt:P20 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q45204 wdt:P20 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Where are both The Call of the Wild and White Fang set, the most two famous works of Jack London?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q476871 wdt:P840 ?result. wd:Q152267 wdt:P840 ?result}",
        "generated_sparql": "SELECT ?value1 ?value2 WHERE { wd:Q44348 p:P800 ?s . ?s ps:P800 wd:Q1960093 . ?s pq:P1706 ?value1 . ?s pq:P1706 ?value2 }",
        "raw_answer": "SELECT ?value1 ?value2 WHERE { wd:Q44348 p:P800 ?s . ?s ps:P800 wd:Q1960093 . ?s pq:P1706 ?value1 . ?s pq:P1706 ?value2 } ORDER BY DESC(?value1) ORDER BY DESC(?value2)LIMIT 5"
    },
    {
        "question": "Where did the Hambach Festival happen?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q551416 wdt:P276 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q172989 wdt:P276 ?X . ?X wdt:P131 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q172989 wdt:P276 ?X . ?X wdt:P131 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Where do the novels of the franchise The Lord of the Rings take place?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q15228 wdt:P840 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q32343 wdt:P178 ?X . ?X wdt:P276 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q32343 wdt:P178 ?X . ?X wdt:P276 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Where does the Nutri-Score originate from?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE{wd:Q46577569 wdt:P495 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q21158981 wdt:P495 ?X . ?X wdt:P2054 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q21158981 wdt:P495 ?X . ?X wdt:P2054 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Are there at least two winners of the Academy Award for Best Actress who have been educated at the same institution?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK{?act wdt:P166 wd:Q103618; wdt:P69 ?result. ?act2 wdt:P166 wd:Q103618; wdt:P69 ?result FILTER(?act != ?act2)}",
        "generated_sparql": "ASK WHERE { wd:Q106300 wdt:P166 ?x0 . ?x0 wdt:P1066 ?x1 . ?x0 wdt:P1431 wd:Q103310 . ?x1 wdt:P69 wd:Q106300 }",
        "raw_answer": "ASK WHERE { wd:Q106300 wdt:P166 ?x0 . ?x0 wdt:P1066 ?x1 . ?x0 wdt:P1431 wd:Q103310 . ?x1 wdt:P69 wd:Q106300 } ORDER BY ASC(?x0) LIMIT 25 ?x0"
    },
    {
        "question": "Where was K-pop star Lisa Manoban born?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q26707663 wdt:P19 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q20919089 wdt:P19 ?X . ?X wdt:P17 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q20919089 wdt:P19 ?X . ?X wdt:P17 ?answer} ORDER BY ASC(?answer)LIMIT 5.\n\n## Answer (1)\n\nSELECT ?answer WHERE { wd:Q20919089 wdt:P19 ?X . ?X wdt:P17 ?answer} ORDER BY ASC(?answer)LIMIT 5.\n\nComment: I'm sorry, but this answer is incorrect. The person is Lisa Manoban, not Lisa Manoban.\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify?\n\nComment: @user1000000 I'm sorry, but I don't understand what you mean. Can you please clarify"
    },
    {
        "question": "What is the highest point of Norway?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q20 wdt:P610 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q20 wdt:P610 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q20 wdt:P610 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "Where did the psychedelic band \u201cKhruangbin\u201d form?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q54555985 wdt:P740 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1084411 wdt:P159 ?X . ?X wdt:P840 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1084411 wdt:P159 ?X . ?X wdt:P840 ?answer} LIMIT 25 ?X\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Where was Caesar murdered?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1048 wdt:P20 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1048 wdt:P20 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1048 wdt:P20 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Where was Goethe\u2019s unmarried partner born ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q5879 wdt:P451/wdt:P19 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q81069 wdt:P162 ?X . ?X wdt:P19 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q81069 wdt:P162 ?X . ?X wdt:P19 ?answer} ORDER BY ASC(?answer)LIMIT 5.\n\n## Answer (1)\n\nSELECT ?answer WHERE { wd:Q81069 wdt:P162 ?X . ?X wdt:P19 ?answer} ORDER BY ASC(?answer)LIMIT 5.\n\nComment: I'm not sure what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user1000000 I'm sorry, I don't understand what you mean by this. Can you please elaborate?\n\nComment: @user100000"
    },
    {
        "question": "Where was Roland Corporation founded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q848490 wdt:P740 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q1075945 p:P740 ?s . ?s ps:P740 ?obj . ?s pq:P17 wd:Q11444 } LIMIT 25 ?s\n\nSELECT ?obj WHERE { wd:Q107594"
    },
    {
        "question": "Where was the author of The Catcher in the Rye born ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q183883 wdt:P50/wdt:P19 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q142655 wdt:P19 ?X . ?X wdt:P19 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q142655 wdt:P19 ?X . ?X wdt:P19 ?answer} ORDER BY ASC(?answer)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Who developed the Erlangen program?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P800 wd:Q315296}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11673 wdt:P178 ?X . ?X wdt:P50 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11673 wdt:P178 ?X . ?X wdt:P50 ?answer} ORDER BY ASC(?answer)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Which actor starring in Free Guy also starred in Deadpool?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q38685497 wdt:P161 ?result. wd:Q19347291 wdt:P161 ?result}",
        "generated_sparql": "SELECT DISTINCT ?x0 WHERE { ?x0 wdt:P453 wd:Q24937 . ?x0 wdt:P453 wd:Q7719293 }",
        "raw_answer": "SELECT DISTINCT ?x0 WHERE { ?x0 wdt:P453 wd:Q24937 . ?x0 wdt:P453 wd:Q7719293 } ORDER BY ASC(?x0)LIMIT 25..25"
    },
    {
        "question": "Which American presidents followed in their father\u2018s step and also became the president?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P39 wd:Q11696; wdt:P22/wdt:P39 wd:Q11696}",
        "generated_sparql": "SELECT ?value1 ?value2 WHERE { wd:Q1065 p:P4336 ?s . ?s ps:P4336 wd:Q10750 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }",
        "raw_answer": "SELECT ?value1 ?value2 WHERE { wd:Q1065 p:P4336 ?s . ?s ps:P4336 wd:Q10750 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 } ORDER BY DESC(?value2)LIMIT 5"
    },
    {
        "question": "which animal can possibly live longer, panda or koala?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {BIND(IF(EXISTS{wd:Q33602 wdt:P4214 ?lp. wd:Q36101 wdt:P4214 ?lk FILTER(?lp > ?lk)},wd:Q33602,wd:Q36101)AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q15719 . ?ent wdt:P3333 ?obj . ?ent wdt:P171 wd:Q12131 . ?ent wdt:P171 wd:Q12132 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q15719 . ?ent wdt:P3333 ?obj . ?ent wdt:P171 wd:Q12131 . ?ent wdt:P171 wd:Q12132 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "Which archipelago has more islands: the Gal\u00e1pagos Islands or the Hawaiian Islands ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {{SELECT (COUNT (DISTINCT ?isl) AS ?gn) WHERE{wd:Q38095 wdt:P527+ ?isl. ?isl wdt:P31/wdt:P279* wd:Q23442}}{SELECT (COUNT (DISTINCT ?isl) AS ?hn) WHERE{wd:Q192626 wdt:P527+ ?isl. ?isl wdt:P31/wdt:P279* wd:Q23442}} BIND(IF(?hn > ?gn, wd:Q192626, wd:Q38095) AS ?result)}",
        "generated_sparql": "select ?obj where { wd:Q131101 wdt:P131 ?obj . ?obj wdt:P31 wd:Q134000 }",
        "raw_answer": "select ?obj where { wd:Q131101 wdt:P131 ?obj . ?obj wdt:P31 wd:Q134000 } ORDER BY DESC(?obj)LIMIT 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Which art movement was Yoko Ono part of?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q117012 wdt:P135 ?result. ?result wdt:P31 wd:Q968159 }",
        "generated_sparql": "select distinct ?obj where { wd:Q117012 wdt:P135 ?obj . ?obj wdt:P31 wd:Q172058 }",
        "raw_answer": "select distinct ?obj where { wd:Q117012 wdt:P135 ?obj . ?obj wdt:P31 wd:Q172058 } ORDER BY ASC(?obj)LIMIT 25..25\n\n\n\nThe SPARQL query for this request is:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "which band is created earlier, queen or pink floyd?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q15862 wdt:P571 ?q. wd:Q2306 wdt:P571 ?p. BIND(IF((?q < ?p), wd:Q15862, wd:Q2306 ) AS ?result)}",
        "generated_sparql": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q1351269 . ?ent wdt:P571 ?obj . ?ent wdt:P170 wd:Q212992 }",
        "raw_answer": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q1351269 . ?ent wdt:P571 ?obj . ?ent wdt:P170 wd:Q212992 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "What caused Kobe Bryant's Death?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q25369 wdt:P509 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11528 wdt:P509 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11528 wdt:P509 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "What are the opposites of zero?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q204 wdt:P461 ?result}",
        "generated_sparql": "SELECT (COUNT(?obj) AS ?value ) { wd:Q1181 wdt:P461 ?obj }",
        "raw_answer": "SELECT (COUNT(?obj) AS ?value ) { wd:Q1181 wdt:P461 ?obj } ASK\n\nThe answer will contain a count of the number of opposite of zero that wikidata has."
    },
    {
        "question": "Which businesses are founded by the person in charge of Tesla?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q478214 wdt:P169 ?found. ?result wdt:P112 ?found; wdt:P31/wdt:P279* wd:Q4830453}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q9181 wdt:P112 ?X . ?X wdt:P355 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q9181 wdt:P112 ?X . ?X wdt:P355 ?answer}"
    },
    {
        "question": "Did Germany have a population growth of at least 1% since 2010?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q183 p:P1082 ?ps10, ?psNew. ?ps10 pq:P585 ?t10; ps:P1082 ?p10. ?psNew pq:P585 ?tNew; ps:P1082 ?pNew BIND(((?pNew - ?p10) / ?p10) AS ?diff) FILTER((YEAR(?t10) = 2010) && NOT EXISTS{wd:Q183 p:P1082/pq:P585 ?tt FILTER(?tt > ?tNew)} && ?diff >= 0.01)}",
        "generated_sparql": "ASK WHERE { wd:Q183 wdt:P1841 ?obj filter(?obj > 0.001) }",
        "raw_answer": "ASK WHERE { wd:Q183 wdt:P1841 ?obj filter(?obj > 0.001) }"
    },
    {
        "question": "Which aircraft did Howard Hughes build?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT ?result WHERE {?result wdt:P31/wdt:P279* wd:Q11436; wdt:P178 wd:Q189081}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P176 wd:Q25186 . ?sbj wdt:P31 wd:Q150569 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P176 wd:Q25186 . ?sbj wdt:P31 wd:Q150569 } ORDER BY ASC(?sbj)LIMIT 5"
    },
    {
        "question": "Which country has more official languages: South Africa (\u200b\u200bQ258) or Ethiopia ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {{SELECT (COUNT (DISTINCT ?lanS) AS ?lanSCount) WHERE {wd:Q258 wdt:P37 ?lanS}} {SELECT (COUNT (DISTINCT ?lanE) AS ?lanECount) WHERE {wd:Q115 wdt:P37 ?lanE}} BIND(IF(?lanSCount > ?lanECount, wd:Q258, wd:Q115) AS ?result)}",
        "generated_sparql": "select ?answer where { ?answer wdt:P37 wd:Q258}",
        "raw_answer": "select ?answer where { ?answer wdt:P37 wd:Q258} ORDER BY DESC(?answer)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Is throat singing a tradition?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q1067089 wdt:P31/wdt:P279* wd:Q82821}",
        "generated_sparql": "ASK WHERE { wd:Q188533 wdt:P175 wd:Q182932 }",
        "raw_answer": "ASK WHERE { wd:Q188533 wdt:P175 wd:Q182932 }"
    },
    {
        "question": "Which disease caused the death of Mark Twain?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q7245 wdt:P509 ?result. ?result wdt:P279* wd:Q12136}",
        "generated_sparql": "select distinct ?obj where { wd:Q7033 wdt:P509 ?obj . ?obj wdt:P31 wd:Q12136 }",
        "raw_answer": "select distinct ?obj where { wd:Q7033 wdt:P509 ?obj . ?obj wdt:P31 wd:Q12136 } ORDER BY ASC(?obj)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Which diseases can be caused by smoking ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q662860 wdt:P1542 ?result. ?result wdt:P279* wd:Q12136}",
        "generated_sparql": "select distinct ?obj where { wd:Q11284 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q12136 }",
        "raw_answer": "select distinct ?obj where { wd:Q11284 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q12136 } ORDER BY ASC(?obj)LIMIT 25000\n\n## Answer (1)\n\nselect distinct ?obj where { wd:Q11284 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q12136 } ORDER BY ASC(?obj)LIMIT 25000\n\nComment: Hi, welcome to the site. This is not a good answer. It doesn't explain what the query does, nor does it provide any context. Please edit your answer to add an explanation. Thanks."
    },
    {
        "question": "Which genre that Cage the Elephant belongs to has the fewest english characters?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q68061 wdt:P136 ?result. ?result rdfs:label ?label FILTER(langMatches(lang(?label),\"en\"))} ORDER BY ASC(strlen(?label)) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q134058 . ?ent wdt:P1036 ?obj . ?ent wdt:P1435 wd:Q174563}",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q134058 . ?ent wdt:P1036 ?obj . ?ent wdt:P1435 wd:Q174563} ORDER BY ASC(?obj)LIMIT 5"
    },
    {
        "question": "Which takes less space? 1kg of lead or 1kg of iron.",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q708 wdt:P2054 ?dl. wd:Q677 wdt:P2054 ?di. BIND(IF(?dl >= ?di, wd:Q708, wd:Q677) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q1065 . ?ent wdt:P2044 ?obj . ?ent wdt:P1427 wd:Q1065. }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q1065 . ?ent wdt:P2044 ?obj . ?ent wdt:P1427 wd:Q1065. } ORDER BY ASC(?obj)LIMIT 5"
    },
    {
        "question": "Which kingdom preceded the Thonburi Kingdom ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1115291 wdt:P1365 ?result. ?result wdt:P122/wdt:P279* wd:Q7269}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q189878 wdt:P1365 ?X . ?X wdt:P35 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q189878 wdt:P1365 ?X . ?X wdt:P35 ?answer} ORDER BY DESC(?X)LIMIT 5.\n\n## Answer (1)\n\nYou can use this query:\n\n```\nSELECT ?answer WHERE { wd:Q189878 wdt:P1365 ?X . ?X wdt:P35 ?answer} ORDER BY DESC(?X)LIMIT 5.\n```\n\nComment: I'm not sure what you mean by \"I can use this query\"...\n\nComment: @JosephLeDuc I mean that you can use this query to get the answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment: @JosephLeDuc I have edited my answer.\n\nComment"
    },
    {
        "question": "How many mountains are located in Germany?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?m) AS ?result) WHERE {?m wdt:P31 wd:Q8502; wdt:P17 wd:Q183}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P150 wd:Q183 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P150 wd:Q183 } ?value FILTER (lang(?value) = 'en')"
    },
    {
        "question": "Which movements is the painting \u201cLes Demoiselles d'Avignon\u201d assigned to?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q910199 wdt:P135 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q2633088 wdt:P180 ?X . ?X wdt:P170 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q2633088 wdt:P180 ?X . ?X wdt:P170 ?answer} LIMIT 25 . FOR ALL ?X WHERE { ?X wdt:P170 ?answer } ORDER BY ASC(?answer)LIMIT 25"
    },
    {
        "question": "Which movies belong to the Cornetto trilogy ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q169604 wdt:P527 ?result}",
        "generated_sparql": "select distinct ?obj where { wd:Q208910 wdt:P155 ?obj . ?obj wdt:P31 wd:Q11424 }",
        "raw_answer": "select distinct ?obj where { wd:Q208910 wdt:P155 ?obj . ?obj wdt:P31 wd:Q11424 } ORDER BY ASC(?obj)LIMIT 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "During what event was the Four Policemen Council proposed?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q2945433 wdt:P607 ?result.}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q189803 p:P793 ?s . ?s ps:P793 wd:Q189804 . ?s pq:P1534 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q189803 p:P793 ?s . ?s ps:P793 wd:Q189804 . ?s pq:P1534 ?value} LIMIT 25 ?s"
    },
    {
        "question": "Which NBA teams have won the most seasons?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {{SELECT DISTINCT (COUNT(DISTINCT ?season) AS ?max) WHERE {?season wdt:P31 wd:Q27020041; wdt:P3450 wd:Q155223; wdt:P1346 ?result. ?result wdt:P31 wd:Q13393265} GROUP BY ?result ORDER BY DESC (?max) LIMIT 1} ?season wdt:P31 wd:Q27020041; wdt:P3450 wd:Q155223; wdt:P1346 ?result. ?result wdt:P31 wd:Q13393265.} GROUP BY ?result HAVING ((COUNT(DISTINCT ?season)) = MAX(?max))",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q15920029 . ?ent wdt:P1351 ?obj }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q15920029 . ?ent wdt:P1351 ?obj } ORDER BY DESC(?obj)LIMIT 5{ ?ent wdt:P31 wd:Q15920029 . ?ent wdt:P1351 ?obj } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "Which of the dragons in Game of Thrones died?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31/wdt:P279* wd:Q30170627; wdt:P1441 wd:Q23572 FILTER(EXISTS{?result wdt:P20 _:ex})}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q24934 wdt:P674 ?answer . ?answer wdt:P156 wd:Q1062504}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q24934 wdt:P674 ?answer . ?answer wdt:P156 wd:Q1062504} ORDER BY ASC(?answer)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Which other movies by the director of Another Round also starred Mads Mikkelsen ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q69303989 wdt:P57 ?dir. ?result wdt:P31 wd:Q11424; wdt:P57 ?dir; wdt:P161 wd:Q294647 FILTER(?result != wd:Q69303989)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q198852 wdt:P57 ?answer . ?answer wdt:P161 wd:Q165163}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q198852 wdt:P57 ?answer . ?answer wdt:P161 wd:Q165163} LIMIT 25 ."
    },
    {
        "question": "Which egyptian pyramid is the tallest?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?pyr WHERE {?pyr wdt:P31/wdt:P279* wd:Q12516; p:P2048/psn:P2048/wikibase:quantityAmount ?h; wdt:P17 wd:Q79 } ORDER BY DESC(?h) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q158319 . ?ent wdt:P2046 ?obj . ?ent wdt:P17 wd:Q79 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q158319 . ?ent wdt:P2046 ?obj . ?ent wdt:P17 wd:Q79 } ORDER BY DESC(?obj)LIMIT 5\n\n## Answer (1)\n\nselect ?ent where { ?ent wdt:P31 wd:Q158319 . ?ent wdt:P2046 ?obj . ?ent wdt:P17 wd:Q79 } ORDER BY DESC(?obj)LIMIT 5\n\nComment: This query is not working. I have tried it in the wikidata query service and it returns no results.\n\nComment: @user1000000 I have edited my answer. It should work now."
    },
    {
        "question": "What is the offical language of Taipei?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1867 wdt:P37 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (1)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT ?answer WHERE { wd:Q18842 wdt:P37 ?X . ?X wdt:P1036 ?answer} LIMIT 25 ?X\n\n## Answer (0)\n\nSELECT"
    },
    {
        "question": "Which shows aired for the first time the same year as Saturday Night Live ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q13979 wdt:P580 ?snl. ?result wdt:P31 wd:Q5398426; wdt:P580 ?start. FILTER(YEAR(?snl) = YEAR(?start) && ?result != wd:Q13979)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q13990 wdt:P464 ?answer . ?answer wdt:P4132 wd:Q108678}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q13990 wdt:P464 ?answer . ?answer wdt:P4132 wd:Q108678} LIMIT 25 ?answer"
    },
    {
        "question": "Which songs made up the album Fijaci\u00f3n Oral vol. 1 ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P361 wd:Q828282; wdt:P31 ?o FILTER(?o IN (wd:Q105543609, wd:Q134556))}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q5655259 wdt:P179 ?X . ?X wdt:P179 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q5655259 wdt:P179 ?X . ?X wdt:P179 ?answer} ORDER BY ASC(?answer)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Which started first: impressionism or expressionism (art movements)?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q40415 wdt:P571 ?imp. wd:Q80113 wdt:P580 ?exp. BIND(IF(?imp < ?exp, wd:Q40415, wd:Q80113) AS ?result)}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q181498 p:P170 ?s . ?s ps:P170 ?obj . ?s pq:P1346 wd:Q181498 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q181498 p:P170 ?s . ?s ps:P170 ?obj . ?s pq:P1346 wd:Q181498 } ORDER BY ASC(?s)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "which state inside USA is batman living in?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q2695156 wdt:P551/wdt:P131 ?result. ?result wdt:P31 wd:Q35657}",
        "generated_sparql": "select distinct ?sbj where { ?sbj wdt:P131 wd:Q193568 . ?sbj wdt:P31 wd:Q3624078 }",
        "raw_answer": "select distinct ?sbj where { ?sbj wdt:P131 wd:Q193568 . ?sbj wdt:P31 wd:Q3624078 } ORDER BY ASC(?sbj)LIMIT 5"
    },
    {
        "question": "which swordfighter in the lord of the rings marry a half-elven and belong to rangers of the north?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P106 wd:Q11397897; wdt:P26/wdt:P31 wd:Q2035494; wdt:P172 wd:Q2292830}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131171 wdt:P26 ?answer . ?answer wdt:P105 wd:Q1141739}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131171 wdt:P26 ?answer . ?answer wdt:P105 wd:Q1141739} ORDER BY ASC(?answer)LIMIT 5."
    },
    {
        "question": "Which teams participated in the 2020 UEFA Champions League Final ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q46569648 wdt:P1923 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q47506886 wdt:P121 ?X . ?X wdt:P1034 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q47506886 wdt:P121 ?X . ?X wdt:P1034 ?answer} LIMIT 25 . FOR ALL ?X WHERE { ?X wdt:P1034 ?answer} ORDER LIMIT 25 OFFSET 0"
    },
    {
        "question": "Which universities have more than 200000 students?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q3918; wdt:P2196 ?stu. FILTER(?stu > xsd:integer(\"200000\"))}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q8734 p:P112 ?s . ?s ps:P112 ?obj . ?s pq:P2046 ?x filter(contains(?x,'200000.0')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q8734 p:P112 ?s . ?s ps:P112 ?obj . ?s pq:P2046 ?x filter(contains(?x,'200000.0')) } ORDER BY ASC(?x)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "which university is established earlier, university of oxford or university of cambridge?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q34433 wdt:P571 ?inco. wd:Q35794 wdt:P571 ?incc BIND(IF((?inco < ?incc), wd:Q34433, wd:Q35794) AS ?result)}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q131252 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P571 ?x filter(contains(YEAR(?x),'1800')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q131252 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P571 ?x filter(contains(YEAR(?x),'1800')) } ORDER BY ASC(?x)LIMIT 25 25 ?obj WHERE { wd:Q131252 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P571 ?x filter(contains(YEAR(?x),'1800')) } ORDER BY ASC(?x)LIMIT 25 25"
    },
    {
        "question": "Who developed WordNet?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q533822 wdt:P178 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q108640 wdt:P178 ?X . ?X wdt:P61 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q108640 wdt:P178 ?X . ?X wdt:P61 ?answer} ORDER BY DESC(?X)LIMIT 5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Who are the actresses in Portrait of a Lady on Fire?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q63246568 wdt:P161 ?result. ?result wdt:P21 wd:Q6581072}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10823511 wdt:P161 ?X . ?X wdt:P106 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10823511 wdt:P161 ?X . ?X wdt:P106 ?answer} LIMIT 25 ?X\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Did Michael Jordan and Kobe Bryant play for the same team?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q25369 wdt:P54 ?team. wd:Q41421 wdt:P54 ?team.}",
        "generated_sparql": "ASK WHERE { wd:Q41422 wdt:P54 wd:Q11878 . wd:Q41422 wdt:P54 wd:Q11299 }",
        "raw_answer": "ASK WHERE { wd:Q41422 wdt:P54 wd:Q11878 . wd:Q41422 wdt:P54 wd:Q11299 }"
    },
    {
        "question": "Who created the Turing machine?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q163310 wdt:P61 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10554 wdt:P61 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10554 wdt:P61 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "When was the Hambach Castle built?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q523286 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q161889 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q161889 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "Who died at the North Pole?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q5; wdt:P20 wd:Q934}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131102 wdt:P20 ?answer . ?answer wdt:P1192 wd:Q131102}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131102 wdt:P20 ?answer . ?answer wdt:P1192 wd:Q131102} ORDER BY ASC(?answer)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Who directed Anne with an E ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q28091065 wdt:P57 ?result.}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q24259264 wdt:P57 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q24259264 wdt:P57 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who wrote \"Prototypical Networks for Few-shot Learning\"?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {{wd:Q44649835 wdt:P50 ?result.} UNION {wd:Q44649835 wdt:P2093 ?result}}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q5117289 wdt:P50 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q5117289 wdt:P50 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who founded \u201cThe Blue Rider\u201d?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q117035 wdt:P112 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q157545 wdt:P170 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q157545 wdt:P170 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who founded the Worpswede artist colony ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q479361 wdt:P112 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q174673 wdt:P112 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q174673 wdt:P112 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who is the author of \u201cConvenience Store Woman\u201d ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q27863945 wdt:P50 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10782481 wdt:P50 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10782481 wdt:P50 ?answer } LIMIT 25 ?context=https://en.wikipedia.org/wiki/Wikidata:ContextDefinitions/d3P363.rdf"
    },
    {
        "question": "Who is the soccer player with the most goals in their career?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P106 wd:Q937857; wdt:P6509 ?goals} ORDER BY DESC(?goals) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P6595 ?obj }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P6595 ?obj } ORDER BY DESC(?obj)LIMIT 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Who is the creator of the Dinosaurs tv show ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1211977 wdt:P170 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q10732 wdt:P170 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q10732 wdt:P170 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who is the current president of the German Bundestag currently?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q154797 wdt:P488 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q176735 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1545 ?x filter(contains(YEAR(?x),'2021')) }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q176735 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1545 ?x filter(contains(YEAR(?x),'2021')) } ORDER BY ASC(?x)LIMIT 5.\n\nThis query selects the object of the property P39 for the subject wd:Q176735, which is the current president of the German Bundestag. The filter contains the year 2021, which is the current year. The results are ordered by ascending order of the year. The LIMIT 5 is used to show only 5 results."
    },
    {
        "question": "Who is the most wealthy entrepreneur?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P2218 ?net; wdt:P106 wd:Q131524} ORDER BY DESC(?net) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q811647 . ?ent wdt:P2219 ?obj . ?ent wdt:P31 wd:Q811647 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q811647 . ?ent wdt:P2219 ?obj . ?ent wdt:P31 wd:Q811647 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "Who is the oldest cast member of the Netflix show \u201cQueer Eye\u201d ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q48817408 wdt:P161 ?result. ?result wdt:P569 ?time} ORDER BY ASC(?time) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1031 ?obj . ?ent wdt:P453 wd:Q108431556 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1031 ?obj . ?ent wdt:P453 wd:Q108431556 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "Who is the publisher of Smite ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q2357719 wdt:P123 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q18209341 wdt:P123 ?X . ?X wdt:P123 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q18209341 wdt:P123 ?X . ?X wdt:P123 ?answer} ORDER BY ASC(?answer)LIMIT 25 ?X that is not the same as the previous one."
    },
    {
        "question": "Who wrote the Erlangen program?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P800 wd:Q315296}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11660 wdt:P50 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11660 wdt:P50 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "In which country is the Nanga Parbat located?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE { wd:Q130736 wdt:P17 ?result. }",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q18048 wdt:P17 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q18048 wdt:P17 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "who produced Star Wars: Episode VI \u2013 Return of the Jedi?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q181803 wdt:P162 ?result}",
        "generated_sparql": "select distinct ?obj where { wd:Q181803 wdt:P162 ?obj . ?obj wdt:P31 wd:Q5 }",
        "raw_answer": "select distinct ?obj where { wd:Q181803 wdt:P162 ?obj . ?obj wdt:P31 wd:Q5 } ORDER BY ASC(?obj)LIMIT 25..25"
    },
    {
        "question": "Who was an actor in more movies, Daniel Day Lewis or Paul Dano ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {{SELECT (COUNT (DISTINCT ?film) AS ?ddl) WHERE {?film wdt:P161 wd:Q166389; wdt:P31 wd:Q11424}} {SELECT (COUNT (DISTINCT ?film) AS ?pd) WHERE {?film wdt:P161 wd:Q343616; wdt:P31 wd:Q11424}} BIND(IF((?ddl > ?pd), wd:Q166389, wd:Q343616) AS ?result)}",
        "generated_sparql": "select ?obj where { wd:Q105608 wdt:P106 ?obj . ?obj wdt:P106 wd:Q33999 }",
        "raw_answer": "select ?obj where { wd:Q105608 wdt:P106 ?obj . ?obj wdt:P106 wd:Q33999 } ORDER BY DESC(?obj)LIMIT 5 5"
    },
    {
        "question": "For what literature prize was Simone de Beauvoir nominated?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q7197 wdt:P1411 ?result. ?result wdt:P31 wd:Q378427}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q46301 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2518 wd:Q189506 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q46301 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2518 wd:Q189506 } ORDER BY ASC(?obj)LIMIT 25..25\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "What is the website of NPR's \u201cTiny Desk Concert\u201d?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q30588383 wdt:P856 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q6725008 wdt:P495 ?X . ?X wdt:P118 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q6725008 wdt:P495 ?X . ?X wdt:P118 ?answer}"
    },
    {
        "question": "Who was the creator of Boo-Boo Bear ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q2394280 wdt:P170 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11212 wdt:P170 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11212 wdt:P170 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who was the creator of Unbreakable Kimmy Schmidt ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q16889037 wdt:P170 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q17143313 wdt:P170 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q17143313 wdt:P170 ?answer } LIMIT 25 ?context=https://www.wikidata.org/context/17143313"
    },
    {
        "question": "Who was the director of Llamas with Hats ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q55621114 wdt:P57 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q56558894 wdt:P57 ?X . ?X wdt:P106 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q56558894 wdt:P57 ?X . ?X wdt:P106 ?answer} ORDER BY ASC(?answer)LIMIT 25 ?X that is the name of the person."
    },
    {
        "question": "Who founded the Roland Corporation?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q848490 wdt:P112 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q164706 wdt:P112 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q164706 wdt:P112 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who was the original actor who played Pinhead ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q2518973 wdt:P175 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q188151 wdt:P175 ?X . ?X wdt:P161 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q188151 wdt:P175 ?X . ?X wdt:P161 ?answer} ORDER BY DESC(?X)LIMIT 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "Who were the parents of Socrates ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {{wd:Q913 wdt:P25 ?result} UNION {wd:Q913 wdt:P22 ?result}}",
        "generated_sparql": "select distinct ?obj where { wd:Q919 wdt:P40 ?obj . ?obj wdt:P31 wd:Q5 }",
        "raw_answer": "select distinct ?obj where { wd:Q919 wdt:P40 ?obj . ?obj wdt:P31 wd:Q5 } ORDER BY ASC(?obj)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Who wrote Anne of Green Gables ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q565911 wdt:P50 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q156529 wdt:P50 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q156529 wdt:P50 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who wrote the poem Howl ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1545259 wdt:P50 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q185720 wdt:P50 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q185720 wdt:P50 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who's the author of The Hellbound Heart ?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q3521239 wdt:P50 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q2084694 wdt:P50 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q2084694 wdt:P50 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Whom did Clara Westhoff marry?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q462333 wdt:P26 ?result}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q162789 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P1039 wd:Q162789 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q162789 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P1039 wd:Q162789 } ORDER BY ASC(?s)LIMIT 25..25"
    },
    {
        "question": "what is the oldest film festival?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P31 wd:Q220505; wdt:P571 ?inc FILTER(isLiteral(?inc))} ORDER BY ASC(?inc) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q15984633 . ?ent wdt:P2036 ?obj . ?ent wdt:P31 wd:Q15984633 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q15984633 . ?ent wdt:P2036 ?obj . ?ent wdt:P31 wd:Q15984633 } ORDER BY DESC(?obj)LIMIT 5\n\n## Answer (1)\n\nselect ?ent where { ?ent wdt:P31 wd:Q15984633 . ?ent wdt:P2036 ?obj . ?ent wdt:P31 wd:Q15984633 } ORDER BY DESC(?obj)LIMIT 5\n\nComment: This query is not correct. It is not the oldest film festival. It is the film festival with the highest number of participants."
    },
    {
        "question": "When was Athens founded?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1524 wdt:P571 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q4154 wdt:P571 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q4154 wdt:P571 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "which river is longer, the Seine or Elbe\uff1f",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1471 wdt:P2043 ?ls. wd:Q1644 wdt:P2043 ?le. BIND(IF((?ls > ?le), wd:Q1471, wd:Q1644) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q207562 . ?ent wdt:P2043 ?obj . ?ent wdt:P31 wd:Q207562. }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q207562 . ?ent wdt:P2043 ?obj . ?ent wdt:P31 wd:Q207562. } ORDER BY DESC(?obj)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "which game is created earlier, super mario bros or Pac-Man?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q11168 wdt:P577 ?cm. wd:Q173626 wdt:P577 ?cp. BIND(IF((?cm < ?cp), wd:Q11168, wd:Q173626) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q705867 . ?ent wdt:P1299 ?obj . ?ent wdt:P170 wd:Q181677 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q705867 . ?ent wdt:P1299 ?obj . ?ent wdt:P170 wd:Q181677 } ORDER BY DESC(?obj)LIMIT 5 5"
    },
    {
        "question": "who is the youngested member in g-idle?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?result wdt:P463 wd:Q51885404; wdt:P569 ?date} ORDER BY DESC(?date) LIMIT 1",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1441 ?obj . ?ent wdt:P1346 wd:Q1071587 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1441 ?obj . ?ent wdt:P1346 wd:Q1071587 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "who is older, Lionel Messi or Cristiano Ronaldo\uff1f",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q615 wdt:P569 ?number. wd:Q11571 wdt:P569 ?number2. BIND(IF(?number < ?number2, wd:Q615, wd:Q11571) AS ?result)}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q131121 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1613 wd:Q183220 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q131121 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1613 wd:Q183220 } ORDER BY DESC(?obj)LIMIT 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "Is heidelberg university or university hamburg founded earlier?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q151510 wdt:P571 ?number. wd:Q156725 wdt:P571 ?number2. BIND(IF(?number < ?number2, wd:Q151510, wd:Q156725) AS ?result)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q151507 wdt:P112 ?answer . ?answer wdt:P571 ?x FILTER(contains(?x,'1900-0-1'))}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q151507 wdt:P112 ?answer . ?answer wdt:P571 ?x FILTER(contains(?x,'1900-0-1'))} LIMIT 25 ?x"
    },
    {
        "question": "which forest is bigger, Amazon Rainforest or Congo Basin?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q177567 wdt:P2046 ?aa. wd:Q932289 wdt:P2046 ?ac. BIND(IF((?aa > ?ac), wd:Q177567, wd:Q932289) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q12476 . ?ent wdt:P2046 ?obj . ?ent wdt:P131 wd:Q13429 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q12476 . ?ent wdt:P2046 ?obj . ?ent wdt:P131 wd:Q13429 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "Does Samsung Electronics or Apple have more employees?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q20718 wdt:P1128 ?se. wd:Q312 wdt:P1128 ?ae. BIND(IF((?se > ?ae), wd:Q20718, wd:Q312) AS ?result)}",
        "generated_sparql": "select ?obj where { wd:Q19830 wdt:P1121 ?obj . ?obj wdt:P31 wd:Q4830453 }",
        "raw_answer": "select ?obj where { wd:Q19830 wdt:P1121 ?obj . ?obj wdt:P31 wd:Q4830453 } ORDER BY DESC(?obj)LIMIT 500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "which company is founded later, samsung or sony?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q20716 wdt:P571 ?sa. wd:Q41187 wdt:P571 ?so. BIND(IF((?sa > ?so), wd:Q20716, wd:Q41187) AS ?result)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q186483 wdt:P112 ?answer . ?answer wdt:P571 wd:Q8097}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q186483 wdt:P112 ?answer . ?answer wdt:P571 wd:Q8097} wdt:P31 wd:Q4830453 . } ORDER BY ASC(?answer)LIMIT 25 ."
    },
    {
        "question": "who is taller, Lionel Messi or Cristiano Ronaldo\uff1f",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q615 wdt:P2048 ?number. wd:Q11571 wdt:P2048 ?number2. BIND(IF(?number > ?number2, wd:Q615, wd:Q11571) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2054 ?obj . ?ent wdt:P170 wd:Q11598 . ?ent wdt:P170 wd:Q16591 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2054 ?obj . ?ent wdt:P170 wd:Q11598 . ?ent wdt:P170 wd:Q16591 } ORDER BY DESC(?obj)LIMIT 5 5"
    },
    {
        "question": "who has won more NBA awards, Michael Jordan or Kobe Bean Bryant\uff1f",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {{SELECT (COUNT (DISTINCT ?number) AS ?mj) WHERE {wd:Q41421 p:P166/ps:P166 ?number.}} {SELECT (COUNT (DISTINCT ?number2) AS ?kb) WHERE {wd:Q25369 p:P166/ps:P166 ?number2.}}  BIND(IF(?mj > ?kb, wd:Q41421, wd:Q25369) AS ?result)}",
        "generated_sparql": "ASK WHERE { wd:Q41422 wdt:P166 wd:Q172738 . wd:Q41422 wdt:P166 wd:Q172739 }",
        "raw_answer": "ASK WHERE { wd:Q41422 wdt:P166 wd:Q172738 . wd:Q41422 wdt:P166 wd:Q172739 } ORDER BY DESC(?obj) ASK LIMIT 5 } ORDER BY DESC(?obj) LIMIT 5"
    },
    {
        "question": "Did Michael Jordan ever weigh more than Kobe Bean Bryant\uff1f",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "ASK {wd:Q41421 p:P2067/psn:P2067/wikibase:quantityAmount ?mj. wd:Q25369 p:P2067/psn:P2067/wikibase:quantityAmount ?kb. BIND(IF(?mj > ?kb, wd:Q41421, wd:Q25369) AS ?result)}",
        "generated_sparql": "ASK WHERE { wd:Q41422 wdt:P2643 ?obj filter(?obj > 1.0) }",
        "raw_answer": "ASK WHERE { wd:Q41422 wdt:P2643 ?obj filter(?obj > 1.0) }\n\n## Answer (1)\n\nYou can use the following query to answer this question:\n\n```\nSELECT ?obj WHERE { wd:Q41422 wdt:P2643 ?obj . ?obj wdt:P1431 wd:Q11813 }\n```\n\nThis query will return true if Kobe Bean Bryant's weight is less than 1.0.\n\nComment: I think this query is not correct. The question asks if Kobe Bean Bryant ever weighed more than Michael Jordan.\n\nComment: @JulianHass I apologize for the confusion. I misunderstood the question. The correct query would be: `SELECT ?obj WHERE { wd:Q41422 wdt:P2643 ?obj . ?obj wdt:P1431 wd:Q11813 }`\n\nComment: @JulianHass I have updated the answer."
    },
    {
        "question": "Who is older, Sebastian Vettel or Lewis Hamilton?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q42311 wdt:P569 ?bv. wd:Q9673 wdt:P569 ?bh. BIND(IF(?bv < ?bh, wd:Q42311, wd:Q9673) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2844 ?obj . ?ent wdt:P170 wd:Q193198 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2844 ?obj . ?ent wdt:P170 wd:Q193198 } ORDER BY DESC(?obj)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "which city is more populated, copenhagen or amsterdam?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1748 wdt:P1082 ?popc. wd:Q727 wdt:P1082 ?popa. BIND(IF((?popc > ?popa), wd:Q1748, wd:Q727) AS ?result)}",
        "generated_sparql": "SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 }",
        "raw_answer": "SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 } ORDER BY DESC(?obj)LIMIT 50 50 { SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 } ORDER BY DESC(?obj)LIMIT 50 50 { SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 } ORDER BY DESC(?obj)LIMIT 50 50 { SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 } ORDER BY DESC(?obj)LIMIT 50 50 { SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 } ORDER BY DESC(?obj)LIMIT 50 50 { SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 } ORDER BY DESC(?obj)LIMIT 50 50 { SELECT ?obj WHERE { wd:Q229 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q175000 } ORDER BY DESC(?obj)LIMIT 50 50 { SELECT ?obj WHERE { wd"
    },
    {
        "question": "How many things are part of the \"One Piece\" Franchise?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?part) AS ?result) WHERE {wd:Q673 wdt:P527 ?part}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1478 wd:Q60916 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1478 wd:Q60916 } LIMIT 25000\n\n## Answer (1)\n\nI am not sure what you mean by \"part of the franchise\". If you mean the number of works that are part of the One Piece franchise, you can use this query:\n\n```\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1478 wd:Q60916 }\n```\n\nIf you mean the number of people that are part of the One Piece franchise, you can use this query:\n\n```\nSELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1478 wd:Q60916 }\n```\n\nComment: I mean the number of things that are part of the franchise.\n\nComment: @user1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "How many fictional female swordfighters are there?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?sf) AS ?result) WHERE {?sf wdt:P31/wdt:P279* wd:Q95074; wdt:P106 wd:Q11397897; wdt:P21 wd:Q6581072}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2641 wd:Q182933 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2641 wd:Q182933 } ASK WHERE { ?sub wdt:P2641 wd:Q182933 }"
    },
    {
        "question": "which company started earlier, Black Diamond Equipment or la sportiva?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q2905359 wdt:P571 ?incbd. wd:Q3821214 wdt:P571 ?incls. BIND(IF((?incbd < ?incls), wd:Q2905359, wd:Q3821214) AS ?result)}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1598231 wdt:P355 ?answer . ?answer wdt:P571 ?x FILTER(contains(?x,'Black Diamond Equipment'))}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1598231 wdt:P355 ?answer . ?answer wdt:P571 ?x FILTER(contains(?x,'Black Diamond Equipment'))} ORDER BY ASC(?answer)LIMIT 50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "question": "which desert is bigger, sahara desert or arabian desert?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q6583 wdt:P2046 ?as. wd:Q208299 wdt:P2046 ?aa. BIND(IF((?as > ?aa), wd:Q6583, wd:Q208299) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q46710 . ?ent wdt:P2046 ?obj . ?ent wdt:P31 wd:Q46710. }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q46710 . ?ent wdt:P2046 ?obj . ?ent wdt:P31 wd:Q46710. } ORDER BY DESC(?obj)LIMIT 5 5"
    },
    {
        "question": "who lives longer, series black or bellatrix Lestrange?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q713701 wdt:P570 ?ds. wd:Q1057918 wdt:P570 ?db. BIND(IF((?ds > ?db), wd:Q713701, wd:Q1057918) AS ?result)}",
        "generated_sparql": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2044 ?obj . ?ent wdt:P1441 wd:Q1273967 }",
        "raw_answer": "select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2044 ?obj . ?ent wdt:P1441 wd:Q1273967 } ORDER BY DESC(?obj)LIMIT 5"
    },
    {
        "question": "What is the area of the great lakes?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q7347 wdt:P2046 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1618 wdt:P2046 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1618 wdt:P2046 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "What is native name of the composer of the Japanese national anthem?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q17 wdt:P85/wdt:P86/wdt:P1559 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q113823 wdt:P86 ?X . ?X wdt:P1705 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q113823 wdt:P86 ?X . ?X wdt:P1705 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Who is the founder of the capital of Vietnam?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q881 wdt:P36/wdt:P112 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q1000 wdt:P112 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q1000 wdt:P112 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "Who is the manager of the operator of Neumayer III?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q7933 wdt:P137/wdt:P1037 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q156089 wdt:P137 ?X . ?X wdt:P1036 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q156089 wdt:P137 ?X . ?X wdt:P1036 ?answer} MAIN FILTERING ( ?X != wd:Q156089 )"
    },
    {
        "question": "How high is the mountain on which G\u00fcnther Messner died?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q195351 wdt:P20/wdt:P2044 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q44910 wdt:P20 ?X . ?X wdt:P610 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q44910 wdt:P20 ?X . ?X wdt:P610 ?answer} ORDER BY DESC(?answer)LIMIT 5.\n\n## Answer (1)\n\nSELECT ?answer WHERE { wd:Q44910 wdt:P20 ?X . ?X wdt:P610 ?answer} ORDER BY DESC(?answer)LIMIT 5.\n\nComment: This is not an answer.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @JosephMichaelSeely I'm sorry, I don't understand what you mean.\n\nComment: @J"
    },
    {
        "question": "What is the twitter name of Running Wild?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q163173 wdt:P740 ?result}",
        "generated_sparql": "select distinct ?answer where { wd:Q2015222 wdt:P4443 ?answer}",
        "raw_answer": "select distinct ?answer where { wd:Q2015222 wdt:P4443 ?answer}"
    },
    {
        "question": "How many times did the Italian national soccer team win the Fifa World Cup?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?win) AS ?result) WHERE {wd:Q676899 wdt:P2522 ?win. ?win wdt:P3450 wd:Q19317}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1346 wd:Q8150 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25.2\n\nSELECT ?value ?obj WHERE { ?sub wdt:P1346 wd:Q8150 } LIMIT 25"
    },
    {
        "question": "What is the area of the capital of Spitsbergen?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q25231 wdt:P36/wdt:P2046 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q18008 wdt:P36 ?X . ?X wdt:P2046 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q18008 wdt:P36 ?X . ?X wdt:P2046 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "What percentage of Andorra is covered with water?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q228 wdt:P2927 ?result}",
        "generated_sparql": "SELECT ?value WHERE { wd:Q32 p:P2049 ?s . ?s ps:P2049 ?x filter(contains(?x,'1.0')) . ?s pq:P1013 ?value}",
        "raw_answer": "SELECT ?value WHERE { wd:Q32 p:P2049 ?s . ?s ps:P2049 ?x filter(contains(?x,'1.0')) . ?s pq:P1013 ?value} ORDER BY DESC(?value)LIMIT 5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "question": "How many countries are located around the euorpean Lake Constance?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?country) AS ?result) WHERE {wd:Q4127 wdt:P17 ?country. ?country wdt:P30 wd:Q46}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P205 wd:Q11285 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P205 wd:Q11285 } ASK WHERE { ?sub wdt:P205 wd:Q11285 }"
    },
    {
        "question": "With how many persons was Richard Burton married?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT (COUNT (DISTINCT ?sp) AS ?result) WHERE {wd:Q151973 wdt:P26 ?sp.}",
        "generated_sparql": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P26 wd:Q100938 }",
        "raw_answer": "SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P26 wd:Q100938 } ASK WHERE { ?sub wdt:P26 wd:Q100938 }"
    },
    {
        "question": "At what coordinates was the \"Sender Teutoburger Wald\" erected?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q1717891 wdt:P625 ?result.}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q108893 wdt:P131 ?X . ?X wdt:P625 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q108893 wdt:P131 ?X . ?X wdt:P625 ?answer}"
    },
    {
        "question": "Where is the poet Alexander Pope buried?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {?poet wdt:P735 wd:Q923; wdt:P734 wd:Q15840785; wdt:P106 wd:Q49757; wdt:P119 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q18099 wdt:P119 ?answer }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q18099 wdt:P119 ?answer } LIMIT 25 ?answer"
    },
    {
        "question": "In what country is the Kandahar-downhill?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q327818 wdt:P17 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q17000 wdt:P17 ?answer . }",
        "raw_answer": "SELECT ?answer WHERE { wd:Q17000 wdt:P17 ?answer . } LIMIT 25 ?answer"
    },
    {
        "question": "Who founded the architectural firm who planned the Elbphilharmonie?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q673223 wdt:P84/wdt:P112 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q133723 wdt:P84 ?X . ?X wdt:P112 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q133723 wdt:P84 ?X . ?X wdt:P112 ?answer} wds 30827811"
    },
    {
        "question": "Where are the founders of the band Metallica from?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q15920 wdt:P112/wdt:P19/wdt:P17 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q134500 wdt:P119 ?X . ?X wdt:P495 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q134500 wdt:P119 ?X . ?X wdt:P495 ?answer} LIMIT 25 ?X"
    },
    {
        "question": "Where does the Granny Smith apple variety come from?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q506040 wdt:P495 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q131333 wdt:P179 ?X . ?X wdt:P463 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q131333 wdt:P179 ?X . ?X wdt:P463 ?answer} LIMIT 25 ?X\n\n## Answer (1)\n\nI am not sure what version of SPARQL you are using, but the query below should work in SPARQL 2017-02-25.\n\n```\nSELECT ?answer WHERE { wd:Q131333 wdt:P179 ?X . ?X wdt:P463 ?answer} LIMIT 25 ?X\n```\n\nComment: I'm using the official SPARQL query editor at wikidata.org. It doesn't seem to work.\n\nComment: @user1000000 I'm sorry to hear that. I'm not sure what version of SPARQL you are using, but the query I posted should work in SPARQL 2017-02-25.\n\nComment: I'm using the version that comes with the official query editor at wikidata.org. It's version 2016-02-29.\n\nComment: @user1000000 I see. I'm sorry to hear that. I'm not sure what version of SPARQL you are using, but the query I posted should work in SPARQL 2017-02-25.\n\nComment: I'm using version 2016-02-29. I'm not sure what version of SPARQL you are using.\n\nComment: @user1000000 I'm sorry to hear that. I'm not sure what version of SPARQL you are using, but the query I posted should work in SPARQL 2017-02-25.\n\nComment: I'm using version 2016-02-29. I'm not sure what version of SPARQL you are using.\n\nComment: @user1000000 I'm sorry to hear that. I'm not sure what version of SPARQL you are using, but the query I posted should work in SPARQL "
    },
    {
        "question": "What is the Fujiyama made of?",
        "knowledge_graph": "Wikidata",
        "gold_sparql": "SELECT DISTINCT ?result WHERE {wd:Q39231 wdt:P186 ?result}",
        "generated_sparql": "SELECT ?answer WHERE { wd:Q11472 wdt:P186 ?X . ?X wdt:P1056 ?answer}",
        "raw_answer": "SELECT ?answer WHERE { wd:Q11472 wdt:P186 ?X . ?X wdt:P1056 ?answer} LIMIT 25 ?X\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
]